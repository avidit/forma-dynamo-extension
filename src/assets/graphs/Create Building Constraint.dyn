{
  "Uuid": "dba55211-a8cd-47da-a9b3-47cf1f4fe50a",
  "IsCustomNode": false,
  "Description": "Create Building Constraint using offsets from the selected site limit. Unique offsets can be specified for the front and other sides of the site limit. Note: May fail on complex site limits. ",
  "Name": "Create Building Constraint",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "3901abf166344efba309dcc9e9b093da",
      "Name": "Orientation of Frontage (N, NE, E, SE, S, SW, W, NW)",
      "Type": "string",
      "Type2": "string",
      "Value": "N",
      "Description": "Creates a string"
    },
    {
      "Id": "cc33f9fc78704bf08e0b3de27e933e11",
      "Name": "Offset from Adjacent Property (meters)",
      "Type": "number",
      "Type2": "number",
      "Value": "6",
      "NumberType": "Double",
      "Description": "Creates a number"
    },
    {
      "Id": "559eb26413d546b4b100643eae6db48c",
      "Name": "Offset from Frontage (meters)",
      "Type": "number",
      "Type2": "number",
      "Value": "3",
      "NumberType": "Double",
      "Description": "Creates a number"
    },
    {
      "Id": "3224eb9a13a74a35a9a662676162c24a",
      "Name": "Height (meters)",
      "Type": "number",
      "Type2": "number",
      "Value": "50",
      "NumberType": "Double",
      "Description": "Creates a number"
    },
    {
      "Id": "7bd33bda161242278592bb6b125b608a",
      "Name": "Select Site Limit",
      "Type": "string",
      "Type2": "string",
      "Value": "{\"elements\":[{\"urn\":\"urn:adsk-forma-elements:basic:pro_mptwspj6cs:75424654-bf42-4a51-8b67-0eeb15ae4fcc+93d316b1fb5f2:1741110318297\",\"path\":\"root/da21ddb\",\"worldTransform\":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}],\"region\":\"US\"}",
      "Description": "Select Element in the Forma Player Extension"
    },
    {
      "Id": "56625a3051a349d89c597d0075d8e1e6",
      "Name": "[Collect Site Id]",
      "Type": "string",
      "Type2": "string",
      "Value": "{\"projectId\":\"pro_mptwspj6cs\",\"siteId\":\"pro_mptwspj6cs\",\"region\":\"US\"}",
      "Description": "Get the current Site in the Forma  "
    },
    {
      "Id": "b33ea50bace949ba90c78c56eec1312a",
      "Name": "[Collect Terrain Mesh]",
      "Type": "string",
      "Type2": "string",
      "Value": "{\"elements\":[{\"urn\":\"urn:adsk-forma-elements:terrain:pro_mptwspj6cs:2446a771-fd25-47df-b95b-9b0ddd94b3ad:1731012856241\",\"path\":\"root/47150687-a650-4ee5-889d-00ce37cc1a12\",\"worldTransform\":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}],\"region\":\"US\"}",
      "Description": "Get terrain of current proposal in the Forma Player Extension"
    }
  ],
  "Outputs": [
    {
      "Id": "581aa89a4b6d4e6597cf6dda678a4e71",
      "Name": "Constraint",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Send the given geometry To Forma Player Extension"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f83df84530ef40248d770be122c914df",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9ec4af68058c4b3d96d5517fa3d35788",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "842c4e6c5cd9431cb3feac58108f239b",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dbe02ad69d7947d8ae4025efec0e6f33",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4aef161d721b4ebca5fcd3c2f9b9dc98",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba780baaa2bd4d72b4d438a813e66b37",
          "Name": "other",
          "Description": "The other Geometry\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df25a1ae01564792b142fe8939723e07",
          "Name": "double",
          "Description": "The distance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DistanceTo@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Obtain the distance from this Geometry to another\n\nGeometry.DistanceTo (other: Geometry): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c413b13e9d284b1da209a76b3690cd8d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5d71418a9feb4930b1a3d309c118e503",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6801b634305344238eb95a1740256502",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Replication": "Auto",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8114d6b276ee41b9b9173159d7208573",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d2577fb2285540dfb1abb986b2b5bc72",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43c1659dc442458db47f1e25d5268f67",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19110d204e104780b314c601c22b618c",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.).\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1962ce00be6143c0b2feba92803004a1",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "68146209a25d4b468eb419b56f6bea13",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4bf7c0ca6db4734923980f3c03cba7a",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c29ba13ed714edeb97252aa20a90456",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x[n];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0a2bcb7259fd403a859716e044e80ec8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4e8be65785a046349d130c390aafe5a1",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8209f575c644579a55c49acac675d17",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b691e27b7ec14bd9a5a26480e05a0373",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0d0a18443a2e4cf98fb05469a450fcbf",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de40ce975c764a67ae6f2588386108f5",
          "Name": "signedDistance",
          "Description": "A positive offset distance applies in the direction of the cross product between the curve's tangent and the plane's normal vector, while a negative offset applies in the opposite direction.\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ad270c8a79c4e0abdd1363746c0981e",
          "Name": "planeNormal",
          "Description": "The curve's plane normal. Defaults to the input curve's plane normal\n\nVector\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6638e05fd6d84333894b7ff3460e9c5a",
          "Name": "Curve[]..[]",
          "Description": "One or more offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.OffsetMany@double,Autodesk.DesignScript.Geometry.Vector",
      "Replication": "Auto",
      "Description": "Create one or more curves by offsetting a planar curve by the given distance in a plane defined by the plane normal. If there are gaps between the offset component curves then, they are filled by extending the offset curves. The \"planeNormal\" input argument defaults to the normal of the plane containing the curve but an explicit normal parallel to the original curve normal can be provided to better control the direction of the offset. For example, if a consistent offset direction is required for multiple curves sharing the same plane, the \"planeNormal\" can be used to override individual curve normals and force all curves to be offset in the same direction. Reversing the normal reverses the direction of the offset.\n\nCurve.OffsetMany (signedDistance: double = 1, planeNormal: Vector = null): Curve[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c30a87aecc564989801c77f0f3e9732c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "69bb0a25c65f4c6c83fd5d4b22c54ac1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd3171ae0e1b4dc79dbf1350a13f8e8e",
          "Name": "signedDistance",
          "Description": "A positive offset distance applies in the direction of the cross product between the curve's tangent and the plane's normal vector, while a negative offset applies in the opposite direction.\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "692fa1b853a641d08b755d7ce40ae85f",
          "Name": "planeNormal",
          "Description": "The curve's plane normal. Defaults to the input curve's plane normal\n\nVector\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c26893666eff4ddc8860c8bb578c0e75",
          "Name": "Curve[]..[]",
          "Description": "One or more offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.OffsetMany@double,Autodesk.DesignScript.Geometry.Vector",
      "Replication": "Auto",
      "Description": "Create one or more curves by offsetting a planar curve by the given distance in a plane defined by the plane normal. If there are gaps between the offset component curves then, they are filled by extending the offset curves. The \"planeNormal\" input argument defaults to the normal of the plane containing the curve but an explicit normal parallel to the original curve normal can be provided to better control the direction of the offset. For example, if a consistent offset direction is required for multiple curves sharing the same plane, the \"planeNormal\" can be used to override individual curve normals and force all curves to be offset in the same direction. Reversing the normal reverses the direction of the offset.\n\nCurve.OffsetMany (signedDistance: double = 1, planeNormal: Vector = null): Curve[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7c418dec27b5461c8e4ddcd9d46c1f11",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9497328aaf684715a7ec99b986df5ecc",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d5ad0aa1c554891b841796fb3bfc612",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe1d72d9e1764e72b89c85151f448641",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ef38f9beb2e842018d153157b503ad87",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7d8e5317c415432ebf0e2ef92c3c56bf",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aebfea099d98430885e4de36ae115b9d",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e7482a3d2de4572bc1d30ec882aaf3c",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a82ff456f6bf4db68d2bb6d4d65c4b54",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a299116a9f34bf0a042619a8bc11e23",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "37123a47558048798350cd1b3c4b5b0b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9fdecf718c3b4fe8b8ab0354e76bbdca",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5e943fa3f8d47f4bc657107e466d3e0",
          "Name": "direction",
          "Description": "Vector to extrude along\n\nVector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd63db1c436540c5a4983424ab40f716",
          "Name": "distance",
          "Description": "Distance to extrude\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd5858d0cc004476b16ef94fb7aac9fe",
          "Name": "Solid",
          "Description": "The extruded Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Extrudes a Curve in the specified direction, by the specified distance. Curve must be closed.\n\nCurve.ExtrudeAsSolid (direction: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1), distance: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "daae408e9df54fca9f412f7e2e741e0a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "96bac590a4ea431089fafacada129e25",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e721819f0be443a2a7f751c998080b0f",
          "Name": "direction",
          "Description": "Vector to extrude along\n\nVector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2de6f8f4f1a46e8b1b796a8127a52ff",
          "Name": "distance",
          "Description": "Distance to extrude\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "241b869ee089406db70866e59aded5b0",
          "Name": "Solid",
          "Description": "The extruded Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtrudeAsSolid@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Extrudes a Curve in the specified direction, by the specified distance. Curve must be closed.\n\nCurve.ExtrudeAsSolid (direction: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1), distance: double = 1): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "937ff23788664fed8c713ac9a3aea5e5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7e9cdd1cdf024c9ca87d91cd8a8b7892",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ec5d649b13248929496e4d959374494",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e93a3149aa814d0fb29fab86162524d7",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8ba125a2e7bb4955b49a4d568e3a70fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c4d7945d585a46c0a28964b72138ddfa",
          "Name": "solid",
          "Description": "Autodesk.DesignScript.Geometry.Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3180208d258043f7bfbc5a05781fc281",
          "Name": "other",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "190eea2cadad4b9d9be23c2259123216",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.Difference@Autodesk.DesignScript.Geometry.Solid",
      "Replication": "Auto",
      "Description": "The boolean difference of this Solid with another\n\nSolid.Difference (other: Solid): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b5bc04df1b8f4bb59b0e3b00f6c51bcb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0d91f02854e4471991808842cf69e5e8",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ff6c1db83534bf0aadd02e4c133ddbf",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1dd0f3530b4d45bd854e2ab02cb009ec",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2ec5e5c8fb94dea8e83b19f4ad16f71",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Replication": "Auto",
      "Description": "Get the canonical Z axis Vector (0,0,1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "303767ceab7946a9bb9dfc79ad6d8a3b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "570ca76623014583863f04c167e90afb",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbd36eee1bce47b99d151ea09c891b27",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01dabf09fad04999a37138398bb6a732",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended. If the curve being extended is linear, the extension will also be linear.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "278da172986c41f8885214a1d82a8e23",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "566aed58437b47c88003bb6cc1f6bbfd",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "776175ad2c3146f99d2c81693e6bc0be",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fbde03029d94ce8afcf7ea687ad1368",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended. If the curve being extended is linear, the extension will also be linear.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "9b5bcf3e397040c0939a0b99c053d936",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "391597f19f5047208c54832b84bf30cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "30;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6379d8b38a114c83aa4adfe371ef620f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9f7ce5206f644ac5a49b581943a75c74",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d89e5dc636cf42a8a8b7b9b8f73baa3f",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5bbff804851485ca3e133b2eee37299",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "af0cc4d282ce4ccc9bfdd111c8f5cb69",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5ca57239a0741aeaea6cd0c2b777276",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87d4fe7398b54560a3ac35b4cf2c774c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\"category\"];\n[\"constraints\"];"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3901abf166344efba309dcc9e9b093da",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "342607f360944f6e8c66cb2b932350f6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "N"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "059e46d978bd454a97cb850bf3810c06",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6d73dd968f3b4068a10a963873f9964c",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd23131bea054a5d88190d0d3bc41082",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9b971566fca047e2978cd15d120a9d93",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4cfa9443082c411f881bb1724c24134d",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33500361c6ba4f62923378179af989ac",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f96b0130f46f40a9814c4b3b02bb8b4d",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4de703c5afaa41cc98b44bbb9d7561f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1b320db618d9428bb31288a1b8d4679f",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb3b338439634a498b5b96feda36e3e8",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24adb5c596184b92b40d74c315ee7e29",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6670532239b148d1a28f94f5cfba3ed4",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b36f002587ea4d44b124cf7734353c40",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "100;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a8663841bc8848579d8c615100d85208",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "679ac75d65c04727899b7e760449da85",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "733b5a5ff9204ea89fba41465a77b3f9",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1a45c6c2de85424facd8b54bc5cdae00",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a4300ea5cd97417b9e90c243344de4ed",
          "Name": "centerPoint",
          "Description": "Center point of circle\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d0f7fd203ca47c790c3a18139cd7de9",
          "Name": "radius",
          "Description": "Radius\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecff7ed646d8405f9d7e1b566448357f",
          "Name": "Circle",
          "Description": "Circle created with center point and radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Replication": "Auto",
      "Description": "Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.\n\nCircle.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Circle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5bd9e24a197547faa48b7db9b72a72d0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ba1628eb7cd94859ba631886064c139f",
          "Name": "circle",
          "Description": "Circle",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "def2d8dea8714399bf4b3796ebdd9d49",
          "Name": "numberSides",
          "Description": "int\nDefault value : 5",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe8856b20b0d492d9af928fd08750aa0",
          "Name": "Polygon",
          "Description": "Polygon",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Polygon.RegularPolygon@Autodesk.DesignScript.Geometry.Circle,int",
      "Replication": "Auto",
      "Description": "Construct an inscribed Polygon Curve within a circle.\n\nPolygon.RegularPolygon (circle: Circle, numberSides: int = 5): Polygon"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "719bc07fcf7145e386dcbffdc50068bf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f65d21bd080e48999ec63ec83ca92135",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc77aa8dfd9a45b2bb2ad0ef4f91f7c1",
          "Name": "u",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9252483feb374813ba2d6e35e3284bf4",
          "Name": "v",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae835a2c4f7d483b8f920c3b59adb659",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PointAtParameter@double,double",
      "Replication": "Auto",
      "Description": "Return the Point at specified U and V parameters.\n\nSurface.PointAtParameter (u: double = 0, v: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "59060a98a7274c63abf0f5eca5a79a52",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "02117d9ff5044d5f83267c10b5875a97",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "22e79808613f4ecf9e1f05769bf3611a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "79dcf5daa5774a88b73a91669b8241c1",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40ce5994603042c682995cd9d2a23310",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "1c4ee39231a542869d784e0ae8ba4bb0",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3f764489815541c783d7eb34cf4aa7a2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "8;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d4a63d8119d0407bb809c22508393595",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0d4100c29bbd463ba212bdd9be850df6",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4de9c259c2d42ca8e0818d1d77865b1",
          "Name": "basePlane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b33d96710464f28a50636b08ae431a0",
          "Name": "degrees",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22b3e7eaa7b648ffbf5e0c701b55a28f",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Rotate@Autodesk.DesignScript.Geometry.Plane,double",
      "Replication": "Auto",
      "Description": "Rotates an object around the Plane origin and normal by a specified degree\n\nGeometry.Rotate (basePlane: Plane, degrees: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8663bfc30a87422ba8f46842a8d37068",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c38bd34d10f84aff9e2162a3ee6a948b",
          "Name": "origin",
          "Description": "Origin point of plane\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97f1312e207445669a97c678231fddc3",
          "Name": "normal",
          "Description": "Normal direction vector of plane\n\nVector\nDefault value : Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22a8d098144c411e82d798c07db36869",
          "Name": "Plane",
          "Description": "Plane created by origin and normal",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByOriginNormal@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector",
      "Replication": "Auto",
      "Description": "Create a Plane centered at root Point, with input normal Vector.\n\nPlane.ByOriginNormal (origin: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), normal: Vector = Autodesk.DesignScript.Geometry.Vector.ByCoordinates(0, 0, 1)): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "728bdb313b42431dbe137d0e430b6a33",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "848f32ba6cae4526825bdb770e9c0c12",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "22.5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c8e7232582a546b99d711c58075b5836",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ed8a3c50bc6240be984480b95f7a939e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\"NE\",\"N\",\"NW\",\"W\",\"SW\",\"S\",\"SE\",\"E\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "01797f797f4c419bb6e09ba9927baea9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cd5071935efc4146b884c5af21b5db68",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38877f04db824cfabf161614af6d451d",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57bc3ad97cf542ca8a0cfb44d9a9a60d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0c49a419011a4846b3e68b48bdbcf401",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cecddfa7e3c744d48a00a0f66556cbf0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7890184c83fe4bd3bd0908eeebb9836f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ce426346974c4fd1b50d50cd7c0f19ec",
          "Name": "curve1",
          "Description": "First curve to blend\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6932423ded054473b87ada7a21ad3753",
          "Name": "curve2",
          "Description": "Second curve to blend\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "857ad9a6e2854f6f9c8a4659a1829cd2",
          "Name": "endOrStart1",
          "Description": "flag to indicate which end of curve 1 to blend\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9426c7e07a284a6c9bdf63595698261b",
          "Name": "endOrStart2",
          "Description": "flag to indicate which end of curve 2 to blend\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b1fb664785c467d8b7fba634b177699",
          "Name": "isG2Continuous",
          "Description": "flag to indicate if resultant curve is of G1 continuity or G2 continuity\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ca4b5972a2b41e19c8dc1e26769efc3",
          "Name": "Curve",
          "Description": "Resulting curve from blending two curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ByBlendBetweenCurves@Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,bool,bool,bool",
      "Replication": "Auto",
      "Description": "Create a curve that blends between two curves\n\nCurve.ByBlendBetweenCurves (curve1: Curve, curve2: Curve, endOrStart1: bool = true, endOrStart2: bool = false, isG2Continuous: bool = false): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "208ef72a15c7424c8274cf8f8b1b9343",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fc8a61ad8d54454bbba35ea48d1f57c1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1dbcdeef65364a0ab598bb33949c92a9",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cc24fc5858c843c9aac716b4611ad80b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fb43d917319049f08eee8a3c6576514e",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34b2e0703bec4e528cbb8bbcf885c278",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.CloseWithLine",
      "Replication": "Auto",
      "Description": "Close polycurve by line connecting start and end points\n\nPolyCurve.CloseWithLine ( ): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7b42708926a34341b41eb94386531b75",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "90aaff70aefd40c88513e738f433a2ce",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fce6902b57d34b998c9757d97d9e448f",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2228854b336645c682814bdfeef87c86",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4cafb68f64340cda6b5e0f9a5dcf706",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15683297b32b44e59b32f0f1287689cc",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "43c7eeb9b44d465db9cbb4912892bebd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "800b3c3eaa50480da9ecd12f30749210",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd503f3d0c6c4319b4240dc86e9d1f08",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee7b2900113945968f3c14b6c8b95b5b",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94d39ca552274dea87dd9c8217437377",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b5ca42c0154b4b4d9aecf34a59af0b9b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cef267f877b64e1494975efa4bc7693a",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7920fa936e34819868a9c3beb78d1aa",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a8b890cd7a94136b149f8a63190e8ac",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2bb2331b1967434dbca13a7bbd55fd68",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00d9f7d45d73468fa45098589c0d5d3b",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dbca96fe6c4541d0be6ff7d570198c37",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "20dc0f0bdb984576bf9831066ff47891",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc6490875d1f4253a899ba8084ac08ea",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.CloseWithLine",
      "Replication": "Auto",
      "Description": "Close polycurve by line connecting start and end points\n\nPolyCurve.CloseWithLine ( ): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "0d1c04f2d2d945c987f4d5600ebd6b51",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ff5bba4e574d410d825a43a84d8412b2",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a88ce75dcfa41d7ba04880d3fd0d4a6",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b26f242b33c04ababc88309e92887a7e",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5e71a555f614ce9aa331fa37e1d0e9d",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "56f827fe04be4beeafc3752b12bc2f30",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0b7158fd8e014a4ca32d9067beb03261",
          "Name": "curve1",
          "Description": "First curve to blend\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a83c0535f4894061b82374e50557aab1",
          "Name": "curve2",
          "Description": "Second curve to blend\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40a21f8044b04c27827730f3b4ab1acc",
          "Name": "endOrStart1",
          "Description": "flag to indicate which end of curve 1 to blend\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a712075a5734e89b5c716db0622286b",
          "Name": "endOrStart2",
          "Description": "flag to indicate which end of curve 2 to blend\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e639d6e095f49b683653449af8f7ae7",
          "Name": "isG2Continuous",
          "Description": "flag to indicate if resultant curve is of G1 continuity or G2 continuity\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b318e35ae1814cc09978b566bb460032",
          "Name": "Curve",
          "Description": "Resulting curve from blending two curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ByBlendBetweenCurves@Autodesk.DesignScript.Geometry.Curve,Autodesk.DesignScript.Geometry.Curve,bool,bool,bool",
      "Replication": "Auto",
      "Description": "Create a curve that blends between two curves\n\nCurve.ByBlendBetweenCurves (curve1: Curve, curve2: Curve, endOrStart1: bool = true, endOrStart2: bool = false, isG2Continuous: bool = false): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a510abc2bba3466badbfa9b6bcf2478c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ca19e8f0ae9846099187a085ba4f5e08",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85250f7b9d024193b3875e5edddd12ba",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "cc33f9fc78704bf08e0b3de27e933e11",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "563d6c59f6ca41e0b8b754e1ba253d20",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 6.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6f2db35c415649d4ba554af8ce9683cc",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "5b6fe0c6f66544d3bc9ff7ba99078c11",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38f96e4d1fe643ed9650112b35a370e2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "-x;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7c6728cc670048ae82a519c1319b08b1",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "9bc2fa06bcd84a71b0c57d8fc3707b45",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd5f016bc30b4801949185850da5612a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "-x;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "559eb26413d546b4b100643eae6db48c",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5f3d4844246f49a496113c47af078cfc",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 3.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f422f145e93949ffa1216ba6597dd1f4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "51b4386211204dbc8e5bbc99aa6d19a0",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fe2aeba8d6b420c84324a3df3e6bc6a",
          "Name": "signedDistance",
          "Description": "A positive offset distance applies in the direction of the cross product between the curve's tangent and the plane's normal vector, while a negative offset applies in the opposite direction.\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "178c3b56cd874fa881443d74f06f87b0",
          "Name": "planeNormal",
          "Description": "The curve's plane normal. Defaults to the input curve's plane normal\n\nVector\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3674bbb2e6b54e17a4177fa6ee74228c",
          "Name": "Curve[]..[]",
          "Description": "One or more offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.OffsetMany@double,Autodesk.DesignScript.Geometry.Vector",
      "Replication": "Auto",
      "Description": "Create one or more curves by offsetting a planar curve by the given distance in a plane defined by the plane normal. If there are gaps between the offset component curves then, they are filled by extending the offset curves. The \"planeNormal\" input argument defaults to the normal of the plane containing the curve but an explicit normal parallel to the original curve normal can be provided to better control the direction of the offset. For example, if a consistent offset direction is required for multiple curves sharing the same plane, the \"planeNormal\" can be used to override individual curve normals and force all curves to be offset in the same direction. Reversing the normal reverses the direction of the offset.\n\nCurve.OffsetMany (signedDistance: double = 1, planeNormal: Vector = null): Curve[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3b18bcba1b9647d7a25ee3bc34fa2ee7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "52776304ecd4423ca7ab4b591512a600",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2a2fd417a9a4e968ab6db1bddba74e6",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "577de22a01ab40e8a1c48f3f420238cf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5eec8398f8cd4ef38a540b9b40781fac",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "319c95a1bec947e3b961afe443cdf52e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "511271d8be014a8b883ed91ed5d50a62",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3bb15eaaf88541f49cc2aecb7cb6e95b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40e040a2cf514d3991bbcccc933579df",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4a535663a3049c39c1961e571806a70",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7d88d74c2944aeaf2a8ccfcbe6a530",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0e41cc7c43914614b431b5c72602cf03",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8cca63723ca349348a22f78a4f79d635",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14cfece8ed6044499ceae87544bb0c7f",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ae7a199f2d945468b4275a3eece6472",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a4a95f712e644db2a7373bc3f7596c36",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "472b2246bef54bd980f03416882c6bbe",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a80ac4c4234642f68e29d893664f3326",
          "Name": "signedDistance",
          "Description": "A positive offset distance applies in the direction of the cross product between the curve's tangent and the plane's normal vector, while a negative offset applies in the opposite direction.\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2fb3c095f8c46c99e2f0d7e1aa4eab5",
          "Name": "planeNormal",
          "Description": "The curve's plane normal. Defaults to the input curve's plane normal\n\nVector\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29e206bbd8404f7492b01d24f4b968d5",
          "Name": "Curve[]..[]",
          "Description": "One or more offset curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.OffsetMany@double,Autodesk.DesignScript.Geometry.Vector",
      "Replication": "Auto",
      "Description": "Create one or more curves by offsetting a planar curve by the given distance in a plane defined by the plane normal. If there are gaps between the offset component curves then, they are filled by extending the offset curves. The \"planeNormal\" input argument defaults to the normal of the plane containing the curve but an explicit normal parallel to the original curve normal can be provided to better control the direction of the offset. For example, if a consistent offset direction is required for multiple curves sharing the same plane, the \"planeNormal\" can be used to override individual curve normals and force all curves to be offset in the same direction. Reversing the normal reverses the direction of the offset.\n\nCurve.OffsetMany (signedDistance: double = 1, planeNormal: Vector = null): Curve[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "89924c7339274dd7aae2225aff8bc31a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6b116016d5f5447bb9c78f884d77351e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0083f690c0564fcfb92c4d99d759257d",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5c804ebd973f422cb5591d346e6dec0d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8a2e9123adf34ee0870aa7a15d2bc2de",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b8496cb24d043afa15282f4627a6db5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "778ad1e1127c442f8ded857c1071f634",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c33bf56dd8294934ac0dfa7b4a772bed",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d08904829e34b7aa746b4532dd1332f",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "121f48bb5630436fbb04f396a4e00d57",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "Id": "b1fb279099b24482bcbf1c7150575671",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "b7197786fb7b4334ac5d7af108bab988",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "daf833d9b6af44148fb2eea361ad4442",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2fe10f3ac16745f59f084a28083ffa1a",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c16d3e5687044cfb9d999a9102ec79bc",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "3224eb9a13a74a35a9a662676162c24a",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dbd377af8b85441ab622a722cbee7826",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 50.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "907f82ea89dc42f5954500ba0a16e903",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "191c8fe93803431f904c3787fb153c3a",
          "Name": "elements",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f989b62575d14923b83a5311be20ce7a",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.Footprint@Forma.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Get the footprint the element overlaps on the terrain.\n\nElement.Footprint (elements: Element[]): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "835dd08352004dd5b14f69ff5e6e32db",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fcbb186c7f424c55bc72a561e4915d93",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "325fbc6b507541ed883cba0d1da1751d",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Forma.NodeModels.SelectElementsHttp, DynamoForma.NodeModels",
      "Id": "7bd33bda161242278592bb6b125b608a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "371703e0234f479c82a16d0d8ccecbed",
          "Name": "elements",
          "Description": "Forma Elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Element in the Forma Player Extension",
      "InputValue": "{\"elements\":[{\"urn\":\"urn:adsk-forma-elements:basic:pro_mptwspj6cs:75424654-bf42-4a51-8b67-0eeb15ae4fcc+93d316b1fb5f2:1741110318297\",\"path\":\"root/da21ddb\",\"worldTransform\":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}],\"region\":\"US\"}"
    },
    {
      "ConcreteType": "Forma.NodeModels.SendToFormaHttp, DynamoForma.NodeModels",
      "Id": "581aa89a4b6d4e6597cf6dda678a4e71",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "32daef9adcde489aaa9e68462a9428d4",
          "Name": "site",
          "Description": "Project",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b4f058542a142a0a5655e45423a9a79",
          "Name": "geometry",
          "Description": "Geometry to Send to Forma",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c085d88bff5440ea8f3b34c79189eb50",
          "Name": "properties",
          "Description": "Properties",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33ff6669d44c480ab30bf58aa1b37e5c",
          "Name": "output",
          "Description": "Send to Forma Result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Send the given geometry To Forma Player Extension"
    },
    {
      "ConcreteType": "Forma.NodeModels.GetSiteHttp, DynamoForma.NodeModels",
      "Id": "56625a3051a349d89c597d0075d8e1e6",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59b3a8e5c9264cfa90c1ffddec27ed39",
          "Name": "site",
          "Description": "Forma Site",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get the current Site in the Forma  ",
      "InputValue": "{\"projectId\":\"pro_mptwspj6cs\",\"siteId\":\"pro_mptwspj6cs\",\"region\":\"US\"}"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ad7c546d6eb84bc695e5ac7c25a709a5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "71f8cf011e6b4a15ad95695c1f38769e",
          "Name": "terrain",
          "Description": "Forma.Elements.System.Terrain",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d960f537d254fd7b3186946508909ea",
          "Name": "x",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff0873e6c6cb43588a6510cdf3441445",
          "Name": "y",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5175b0d8d0424c72905c520f09587a47",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.System.Terrain.ElevationAt@double,double",
      "Replication": "Auto",
      "Description": "Get the elevation at a x,y point on the terrain\n\nTerrain.ElevationAt (x: double, y: double): double"
    },
    {
      "ConcreteType": "Forma.NodeModels.GetTerrainHttp, DynamoForma.NodeModels",
      "Id": "b33ea50bace949ba90c78c56eec1312a",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2cef7744a144336b38b2236a857e90a",
          "Name": "terrain",
          "Description": "Forma Terrain Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get terrain of current proposal in the Forma Player Extension",
      "InputValue": "{\"elements\":[{\"urn\":\"urn:adsk-forma-elements:terrain:pro_mptwspj6cs:2446a771-fd25-47df-b95b-9b0ddd94b3ad:1731012856241\",\"path\":\"root/47150687-a650-4ee5-889d-00ce37cc1a12\",\"worldTransform\":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}],\"region\":\"US\"}"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de33543853c8426fa70496526ed1ac4a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0396c2ae8c0b436d85b731042d4a0275",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "868f3a1a0ebb46ef9744a7d8e3ab5382",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2d9efd242b6643ffaa5ef1ce848d2f48",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "21e78e4544af4ad4b25bcf66077176dc",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "875d8ac3ea69445db8cd74954a4a5b9e",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "10d48812b5514a119f247ebf58625ec7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "446ac1f2f2cb4a10a4bddd02f6838fdc",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38c569c0a0fa48aba0391a6a4a7aa43f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "20467ba84c2f46caa05d9e8a7ec10609",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7835588a90fd46638cb5591ebe2d4ff3",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0c3d06e6e4c44cfaa747491f6bc02b9",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b76d2c064a8f485a94626e45cfa40940",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a751ba237e3642108177647b0d0bdf86",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7159e4bb42c54e00bd0e8f454826bfd3",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1dc8251d33941cba24d7dd9f369c099",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9199dcab5ce2490f8a1c1ca8272f3bcc",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "53e19c47fb244a1d8046e87e25ef7a7b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "66e6f94b1a804b089e7ae9ae29a51d34",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48472f6b30c740a191c65004a0d28142",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b1b4436d324e4ccfbc860ce5299032c7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5a0964279fc04e8eb9186756e6d19f9a",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fee28ca943e4231aa8522426bf93a24",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "150a6b381e7e48c39902ee62d223011c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "41892e7987004b7586d0c9d2710ff6a7",
          "Name": "list",
          "Description": "List of comparable items to take the maximum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc6ce0ec22024232aa4982ab2031c971",
          "Name": "item",
          "Description": "Maximum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Replication": "Auto",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d9de1b55d4d34d21af1999d99b237342",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "394a9059c92d40c4a25291021702cef3",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c2be32c4b614228b114a4bca2175ece",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3e4281c052a49b5b737ee326ce5b22e",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a35d45d162524bb58852532d395787e0",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea68d0f209dd4cda8d96eb61e5c0adf5",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Replication": "Auto",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    }
  ],
  "Connectors": [
    {
      "Start": "842c4e6c5cd9431cb3feac58108f239b",
      "End": "cd5071935efc4146b884c5af21b5db68",
      "Id": "5c877a45d73440589db9d6955bae67e6",
      "IsHidden": "False"
    },
    {
      "Start": "df25a1ae01564792b142fe8939723e07",
      "End": "5d71418a9feb4930b1a3d309c118e503",
      "Id": "f55780a241c3454489d29bac6f96f529",
      "IsHidden": "False"
    },
    {
      "Start": "df25a1ae01564792b142fe8939723e07",
      "End": "d2577fb2285540dfb1abb986b2b5bc72",
      "Id": "170abae3de214d75802a74ff5a0aa3ba",
      "IsHidden": "False"
    },
    {
      "Start": "6801b634305344238eb95a1740256502",
      "End": "43c1659dc442458db47f1e25d5268f67",
      "Id": "67098eea08724bff8e12f704b7add15b",
      "IsHidden": "False"
    },
    {
      "Start": "19110d204e104780b314c601c22b618c",
      "End": "e4bf7c0ca6db4734923980f3c03cba7a",
      "Id": "b0627acc48ad4ece86fd933ea6ab8a03",
      "IsHidden": "False"
    },
    {
      "Start": "19110d204e104780b314c601c22b618c",
      "End": "1d5ad0aa1c554891b841796fb3bfc612",
      "Id": "5406e039e19647309aba4f282a84844c",
      "IsHidden": "False"
    },
    {
      "Start": "9c29ba13ed714edeb97252aa20a90456",
      "End": "570ca76623014583863f04c167e90afb",
      "Id": "760f2a6daf6d4a95bc7f151d4e67fd9c",
      "IsHidden": "False"
    },
    {
      "Start": "b8209f575c644579a55c49acac675d17",
      "End": "68146209a25d4b468eb419b56f6bea13",
      "Id": "346806e7a37d415b8b4e8afe1cf97e5a",
      "IsHidden": "False"
    },
    {
      "Start": "b8209f575c644579a55c49acac675d17",
      "End": "9497328aaf684715a7ec99b986df5ecc",
      "Id": "8f9a64e4448d4603ae1543d2010f06ab",
      "IsHidden": "False"
    },
    {
      "Start": "6638e05fd6d84333894b7ff3460e9c5a",
      "End": "52776304ecd4423ca7ab4b591512a600",
      "Id": "7ef1dad3700a4852b113703e5f8310a8",
      "IsHidden": "False"
    },
    {
      "Start": "6638e05fd6d84333894b7ff3460e9c5a",
      "End": "40e040a2cf514d3991bbcccc933579df",
      "Id": "20068ae76f46467d919f3ef7e3bc5490",
      "IsHidden": "False"
    },
    {
      "Start": "c26893666eff4ddc8860c8bb578c0e75",
      "End": "6b116016d5f5447bb9c78f884d77351e",
      "Id": "61d9fbb066084ff799f40436c277137d",
      "IsHidden": "False"
    },
    {
      "Start": "c26893666eff4ddc8860c8bb578c0e75",
      "End": "daf833d9b6af44148fb2eea361ad4442",
      "Id": "fa474df9935248969a6cf9d58657ae75",
      "IsHidden": "False"
    },
    {
      "Start": "fe1d72d9e1764e72b89c85151f448641",
      "End": "7d8e5317c415432ebf0e2ef92c3c56bf",
      "Id": "fe559423c9c9456ba23b0cf93de9bae3",
      "IsHidden": "False"
    },
    {
      "Start": "5a299116a9f34bf0a042619a8bc11e23",
      "End": "0d0a18443a2e4cf98fb05469a450fcbf",
      "Id": "fd902a0ca4534e88bd1934e850815221",
      "IsHidden": "False"
    },
    {
      "Start": "5a299116a9f34bf0a042619a8bc11e23",
      "End": "6932423ded054473b87ada7a21ad3753",
      "Id": "a098ffe5cccc4c2d9dad96d9fc6ecc0a",
      "IsHidden": "False"
    },
    {
      "Start": "5a299116a9f34bf0a042619a8bc11e23",
      "End": "fd503f3d0c6c4319b4240dc86e9d1f08",
      "Id": "628d1270c56b43feb6d44c0d2626f573",
      "IsHidden": "False"
    },
    {
      "Start": "5a299116a9f34bf0a042619a8bc11e23",
      "End": "51b4386211204dbc8e5bbc99aa6d19a0",
      "Id": "5ef7195a49d94721839dfd9bdd6399c9",
      "IsHidden": "False"
    },
    {
      "Start": "cd5858d0cc004476b16ef94fb7aac9fe",
      "End": "c4d7945d585a46c0a28964b72138ddfa",
      "Id": "86c52a0cb2ae45c897b7f23ad4598e5a",
      "IsHidden": "False"
    },
    {
      "Start": "241b869ee089406db70866e59aded5b0",
      "End": "0d91f02854e4471991808842cf69e5e8",
      "Id": "c77dac74eab349329974bf77f85a1ba2",
      "IsHidden": "False"
    },
    {
      "Start": "e93a3149aa814d0fb29fab86162524d7",
      "End": "96bac590a4ea431089fafacada129e25",
      "Id": "abc305ef3a0840c99d4e3b2959025f14",
      "IsHidden": "False"
    },
    {
      "Start": "190eea2cadad4b9d9be23c2259123216",
      "End": "394a9059c92d40c4a25291021702cef3",
      "Id": "3eed5f2be7984d7cbf8a11ae116debde",
      "IsHidden": "False"
    },
    {
      "Start": "4ff6c1db83534bf0aadd02e4c133ddbf",
      "End": "3180208d258043f7bfbc5a05781fc281",
      "Id": "17bdb97a1a7d4879aa423d118028f945",
      "IsHidden": "False"
    },
    {
      "Start": "a2ec5e5c8fb94dea8e83b19f4ad16f71",
      "End": "4ad270c8a79c4e0abdd1363746c0981e",
      "Id": "df28ff9ee9c84b969b900e4f221406f6",
      "IsHidden": "False"
    },
    {
      "Start": "a2ec5e5c8fb94dea8e83b19f4ad16f71",
      "End": "692fa1b853a641d08b755d7ce40ae85f",
      "Id": "7f9e4dfa298042c791fd1af28ee88a3a",
      "IsHidden": "False"
    },
    {
      "Start": "a2ec5e5c8fb94dea8e83b19f4ad16f71",
      "End": "178c3b56cd874fa881443d74f06f87b0",
      "Id": "7cd73244b2eb455d97cdc842674f71c3",
      "IsHidden": "False"
    },
    {
      "Start": "a2ec5e5c8fb94dea8e83b19f4ad16f71",
      "End": "d2fb3c095f8c46c99e2f0d7e1aa4eab5",
      "Id": "97371479b84540f4a9ae09263ed4333c",
      "IsHidden": "False"
    },
    {
      "Start": "01dabf09fad04999a37138398bb6a732",
      "End": "566aed58437b47c88003bb6cc1f6bbfd",
      "Id": "b9077ff311f548899baefa7be601802c",
      "IsHidden": "False"
    },
    {
      "Start": "4fbde03029d94ce8afcf7ea687ad1368",
      "End": "69bb0a25c65f4c6c83fd5d4b22c54ac1",
      "Id": "a70616c6802246b8a5b9a28f4b806220",
      "IsHidden": "False"
    },
    {
      "Start": "4fbde03029d94ce8afcf7ea687ad1368",
      "End": "a83c0535f4894061b82374e50557aab1",
      "Id": "b6cdd8ca52384c879e7eb65a4a86e37e",
      "IsHidden": "False"
    },
    {
      "Start": "4fbde03029d94ce8afcf7ea687ad1368",
      "End": "3a88ce75dcfa41d7ba04880d3fd0d4a6",
      "Id": "d430508ebdcc4d7e860ee8b639cf6c78",
      "IsHidden": "False"
    },
    {
      "Start": "4fbde03029d94ce8afcf7ea687ad1368",
      "End": "472b2246bef54bd980f03416882c6bbe",
      "Id": "82a255cd6f394b2cb7ecb7e4ecbb53a4",
      "IsHidden": "False"
    },
    {
      "Start": "391597f19f5047208c54832b84bf30cd",
      "End": "cbd36eee1bce47b99d151ea09c891b27",
      "Id": "86506c525e3740768903bb98a18275e0",
      "IsHidden": "False"
    },
    {
      "Start": "391597f19f5047208c54832b84bf30cd",
      "End": "776175ad2c3146f99d2c81693e6bc0be",
      "Id": "9341e7e14cc44236b2977da4c3dfa908",
      "IsHidden": "False"
    },
    {
      "Start": "c5bbff804851485ca3e133b2eee37299",
      "End": "c085d88bff5440ea8f3b34c79189eb50",
      "Id": "de621abe6d174fc3b2b414bb2a0b53a2",
      "IsHidden": "False"
    },
    {
      "Start": "b5ca57239a0741aeaea6cd0c2b777276",
      "End": "9f7ce5206f644ac5a49b581943a75c74",
      "Id": "360f9e565afb46508b937184c586f41f",
      "IsHidden": "False"
    },
    {
      "Start": "87d4fe7398b54560a3ac35b4cf2c774c",
      "End": "d89e5dc636cf42a8a8b7b9b8f73baa3f",
      "Id": "6d4524e9be2c4dd2976cf6428cc99b7b",
      "IsHidden": "False"
    },
    {
      "Start": "342607f360944f6e8c66cb2b932350f6",
      "End": "bb3b338439634a498b5b96feda36e3e8",
      "Id": "2dc73339441d4e729867fcd41a22319c",
      "IsHidden": "False"
    },
    {
      "Start": "fd23131bea054a5d88190d0d3bc41082",
      "End": "33500361c6ba4f62923378179af989ac",
      "Id": "341881e9fde64645805af36a24f1759a",
      "IsHidden": "False"
    },
    {
      "Start": "f96b0130f46f40a9814c4b3b02bb8b4d",
      "End": "1b320db618d9428bb31288a1b8d4679f",
      "Id": "c693dc8a421147959e6e5b7f64de314f",
      "IsHidden": "False"
    },
    {
      "Start": "24adb5c596184b92b40d74c315ee7e29",
      "End": "ba780baaa2bd4d72b4d438a813e66b37",
      "Id": "cb82e55d95824254873862de94a20aa1",
      "IsHidden": "False"
    },
    {
      "Start": "b36f002587ea4d44b124cf7734353c40",
      "End": "7d0f7fd203ca47c790c3a18139cd7de9",
      "Id": "fc1fbc50d93d4454974e85a3f25c86da",
      "IsHidden": "False"
    },
    {
      "Start": "733b5a5ff9204ea89fba41465a77b3f9",
      "End": "9ec4af68058c4b3d96d5517fa3d35788",
      "Id": "437d87f70b144be09ad2b56cf12216ed",
      "IsHidden": "False"
    },
    {
      "Start": "733b5a5ff9204ea89fba41465a77b3f9",
      "End": "4e8be65785a046349d130c390aafe5a1",
      "Id": "d420126ebf6545e891288f9eba28ae16",
      "IsHidden": "False"
    },
    {
      "Start": "733b5a5ff9204ea89fba41465a77b3f9",
      "End": "9fdecf718c3b4fe8b8ab0354e76bbdca",
      "Id": "c66fcc41e5e448e486d6d99924e65cb7",
      "IsHidden": "False"
    },
    {
      "Start": "733b5a5ff9204ea89fba41465a77b3f9",
      "End": "79dcf5daa5774a88b73a91669b8241c1",
      "Id": "6bd0154635664d1588262c1a39cefc7e",
      "IsHidden": "False"
    },
    {
      "Start": "ecff7ed646d8405f9d7e1b566448357f",
      "End": "0d4100c29bbd463ba212bdd9be850df6",
      "Id": "f0bb88e6956b426e801c5b10803eea84",
      "IsHidden": "False"
    },
    {
      "Start": "fe8856b20b0d492d9af928fd08750aa0",
      "End": "6d73dd968f3b4068a10a963873f9964c",
      "Id": "63ef1ab29e0e4593a8c64baabd6caa24",
      "IsHidden": "False"
    },
    {
      "Start": "ae835a2c4f7d483b8f920c3b59adb659",
      "End": "a4300ea5cd97417b9e90c243344de4ed",
      "Id": "6bd660b950004fabb7ec36c97cd90982",
      "IsHidden": "False"
    },
    {
      "Start": "ae835a2c4f7d483b8f920c3b59adb659",
      "End": "c38bd34d10f84aff9e2162a3ee6a948b",
      "Id": "3c2d006c7be8415b9a0ac0075918118e",
      "IsHidden": "False"
    },
    {
      "Start": "02117d9ff5044d5f83267c10b5875a97",
      "End": "bc77aa8dfd9a45b2bb2ad0ef4f91f7c1",
      "Id": "b6052cf4aaf340a585839d05adc08914",
      "IsHidden": "False"
    },
    {
      "Start": "02117d9ff5044d5f83267c10b5875a97",
      "End": "9252483feb374813ba2d6e35e3284bf4",
      "Id": "1d5d7ca2e4da4746aa60d66156ae9b8d",
      "IsHidden": "False"
    },
    {
      "Start": "40ce5994603042c682995cd9d2a23310",
      "End": "f65d21bd080e48999ec63ec83ca92135",
      "Id": "8433e5ecd64e47d6b96db4cd949291e7",
      "IsHidden": "False"
    },
    {
      "Start": "3f764489815541c783d7eb34cf4aa7a2",
      "End": "def2d8dea8714399bf4b3796ebdd9d49",
      "Id": "76f0ba9ab78a49e1bedafe2f4258cbfb",
      "IsHidden": "False"
    },
    {
      "Start": "22b3e7eaa7b648ffbf5e0c701b55a28f",
      "End": "ba1628eb7cd94859ba631886064c139f",
      "Id": "fd3139a9f7904d6699a4edc0b08aa26c",
      "IsHidden": "False"
    },
    {
      "Start": "22a8d098144c411e82d798c07db36869",
      "End": "b4de9c259c2d42ca8e0818d1d77865b1",
      "Id": "573b751ecd0a4685885a6836aa0bf01d",
      "IsHidden": "False"
    },
    {
      "Start": "848f32ba6cae4526825bdb770e9c0c12",
      "End": "4b33d96710464f28a50636b08ae431a0",
      "Id": "b840c2a1e3654c59bc77896574d47962",
      "IsHidden": "False"
    },
    {
      "Start": "ed8a3c50bc6240be984480b95f7a939e",
      "End": "4cfa9443082c411f881bb1724c24134d",
      "Id": "07367d0d10eb42119d0d6543f045178d",
      "IsHidden": "False"
    },
    {
      "Start": "57bc3ad97cf542ca8a0cfb44d9a9a60d",
      "End": "4aef161d721b4ebca5fcd3c2f9b9dc98",
      "Id": "7cfb860844c94adcad6b072d6788426d",
      "IsHidden": "False"
    },
    {
      "Start": "cecddfa7e3c744d48a00a0f66556cbf0",
      "End": "38877f04db824cfabf161614af6d451d",
      "Id": "7ec49ceb8af043a69c62b59d11913d86",
      "IsHidden": "False"
    },
    {
      "Start": "7ca4b5972a2b41e19c8dc1e26769efc3",
      "End": "ee7b2900113945968f3c14b6c8b95b5b",
      "Id": "a027ff2441534387b39cc3df4c9b7bcf",
      "IsHidden": "False"
    },
    {
      "Start": "1dbcdeef65364a0ab598bb33949c92a9",
      "End": "ce426346974c4fd1b50d50cd7c0f19ec",
      "Id": "9b0873344df241849a7642e9b467c1c8",
      "IsHidden": "False"
    },
    {
      "Start": "1dbcdeef65364a0ab598bb33949c92a9",
      "End": "800b3c3eaa50480da9ecd12f30749210",
      "Id": "431b0ab9411e40e281026d043c0d6bf5",
      "IsHidden": "False"
    },
    {
      "Start": "34b2e0703bec4e528cbb8bbcf885c278",
      "End": "7e9cdd1cdf024c9ca87d91cd8a8b7892",
      "Id": "55fee24bd3fb4b42a51a70bb0a97df48",
      "IsHidden": "False"
    },
    {
      "Start": "34b2e0703bec4e528cbb8bbcf885c278",
      "End": "0396c2ae8c0b436d85b731042d4a0275",
      "Id": "741400ccc71e43b0833d066714f8dfd1",
      "IsHidden": "False"
    },
    {
      "Start": "15683297b32b44e59b32f0f1287689cc",
      "End": "fb43d917319049f08eee8a3c6576514e",
      "Id": "67814d7573d44b969f43fb0193a8288f",
      "IsHidden": "False"
    },
    {
      "Start": "94d39ca552274dea87dd9c8217437377",
      "End": "90aaff70aefd40c88513e738f433a2ce",
      "Id": "16a55d8d7e9f4ab98e615014cb9d17f3",
      "IsHidden": "False"
    },
    {
      "Start": "00d9f7d45d73468fa45098589c0d5d3b",
      "End": "20dc0f0bdb984576bf9831066ff47891",
      "Id": "717c7b72753a4491a3125adb90f817fa",
      "IsHidden": "False"
    },
    {
      "Start": "dc6490875d1f4253a899ba8084ac08ea",
      "End": "9ec5d649b13248929496e4d959374494",
      "Id": "fbfeb00e75c94630b8eff828ad77720e",
      "IsHidden": "False"
    },
    {
      "Start": "a5e71a555f614ce9aa331fa37e1d0e9d",
      "End": "cef267f877b64e1494975efa4bc7693a",
      "Id": "99bda0f190a240c4bf044217d5cf8cc5",
      "IsHidden": "False"
    },
    {
      "Start": "b318e35ae1814cc09978b566bb460032",
      "End": "b26f242b33c04ababc88309e92887a7e",
      "Id": "470a432068e64e36a3503e3f3c7b01da",
      "IsHidden": "False"
    },
    {
      "Start": "85250f7b9d024193b3875e5edddd12ba",
      "End": "ff5bba4e574d410d825a43a84d8412b2",
      "Id": "ac581ae775274c1ca17c9abb23ee8660",
      "IsHidden": "False"
    },
    {
      "Start": "85250f7b9d024193b3875e5edddd12ba",
      "End": "0b7158fd8e014a4ca32d9067beb03261",
      "Id": "ac9fcc60b2de45f797a0c95f47bf711a",
      "IsHidden": "False"
    },
    {
      "Start": "563d6c59f6ca41e0b8b754e1ba253d20",
      "End": "de40ce975c764a67ae6f2588386108f5",
      "Id": "ce6c9d2cfcb444f09f2d95f80836141f",
      "IsHidden": "False"
    },
    {
      "Start": "563d6c59f6ca41e0b8b754e1ba253d20",
      "End": "5b6fe0c6f66544d3bc9ff7ba99078c11",
      "Id": "a0ce763c2f364624b0d44ab93dde61ab",
      "IsHidden": "False"
    },
    {
      "Start": "38f96e4d1fe643ed9650112b35a370e2",
      "End": "1fe2aeba8d6b420c84324a3df3e6bc6a",
      "Id": "d0532f54146844c1b0303e642f4eaa1f",
      "IsHidden": "False"
    },
    {
      "Start": "fd5f016bc30b4801949185850da5612a",
      "End": "a80ac4c4234642f68e29d893664f3326",
      "Id": "bf8fe01137f849fd9359f8e8337ce1f9",
      "IsHidden": "False"
    },
    {
      "Start": "5f3d4844246f49a496113c47af078cfc",
      "End": "9bc2fa06bcd84a71b0c57d8fc3707b45",
      "Id": "a0e9dda7f83849f2b9411d1199840993",
      "IsHidden": "False"
    },
    {
      "Start": "5f3d4844246f49a496113c47af078cfc",
      "End": "bd3171ae0e1b4dc79dbf1350a13f8e8e",
      "Id": "cf59c61d733e416dafb06d314a239bc2",
      "IsHidden": "False"
    },
    {
      "Start": "3674bbb2e6b54e17a4177fa6ee74228c",
      "End": "5eec8398f8cd4ef38a540b9b40781fac",
      "Id": "be8f17184c66426989cc2d5d825c1757",
      "IsHidden": "False"
    },
    {
      "Start": "3674bbb2e6b54e17a4177fa6ee74228c",
      "End": "e4a535663a3049c39c1961e571806a70",
      "Id": "163e8ff0d4b14a70aa46418b13e83329",
      "IsHidden": "False"
    },
    {
      "Start": "c2a2fd417a9a4e968ab6db1bddba74e6",
      "End": "8cca63723ca349348a22f78a4f79d635",
      "Id": "d20a33a8d2eb42c3978bd9c04b3c5097",
      "IsHidden": "False"
    },
    {
      "Start": "319c95a1bec947e3b961afe443cdf52e",
      "End": "14cfece8ed6044499ceae87544bb0c7f",
      "Id": "a72764a0012f4247a759700b61714048",
      "IsHidden": "False"
    },
    {
      "Start": "be7d88d74c2944aeaf2a8ccfcbe6a530",
      "End": "fc8a61ad8d54454bbba35ea48d1f57c1",
      "Id": "ddbc4c2ad6ce4239ae03076dcc346134",
      "IsHidden": "False"
    },
    {
      "Start": "8ae7a199f2d945468b4275a3eece6472",
      "End": "3bb15eaaf88541f49cc2aecb7cb6e95b",
      "Id": "87ab73a9d4a248a4a118f625c7181381",
      "IsHidden": "False"
    },
    {
      "Start": "29e206bbd8404f7492b01d24f4b968d5",
      "End": "8a2e9123adf34ee0870aa7a15d2bc2de",
      "Id": "bb6b8d72f9c8428a84efd0b9d9e34342",
      "IsHidden": "False"
    },
    {
      "Start": "29e206bbd8404f7492b01d24f4b968d5",
      "End": "2fe10f3ac16745f59f084a28083ffa1a",
      "Id": "d45e626ef45640d48a3b6ecbb3c0d565",
      "IsHidden": "False"
    },
    {
      "Start": "0083f690c0564fcfb92c4d99d759257d",
      "End": "c33bf56dd8294934ac0dfa7b4a772bed",
      "Id": "af61785c5943453f9c197007832efe28",
      "IsHidden": "False"
    },
    {
      "Start": "5b8496cb24d043afa15282f4627a6db5",
      "End": "7d08904829e34b7aa746b4532dd1332f",
      "Id": "7021f5fe356549a08c54ad341c98d4d0",
      "IsHidden": "False"
    },
    {
      "Start": "121f48bb5630436fbb04f396a4e00d57",
      "End": "b7197786fb7b4334ac5d7af108bab988",
      "Id": "1f2e357e0b5045e0914de4cc268eaed9",
      "IsHidden": "False"
    },
    {
      "Start": "c16d3e5687044cfb9d999a9102ec79bc",
      "End": "ca19e8f0ae9846099187a085ba4f5e08",
      "Id": "10027cda18264d5e80a6b461cc3172fc",
      "IsHidden": "False"
    },
    {
      "Start": "dbd377af8b85441ab622a722cbee7826",
      "End": "c2de6f8f4f1a46e8b1b796a8127a52ff",
      "Id": "809cb75c8c78421794ee7b340941cfb9",
      "IsHidden": "False"
    },
    {
      "Start": "dbd377af8b85441ab622a722cbee7826",
      "End": "cd63db1c436540c5a4983424ab40f716",
      "Id": "d0c58a6285df4c1f894a76d48ebeea52",
      "IsHidden": "False"
    },
    {
      "Start": "f989b62575d14923b83a5311be20ce7a",
      "End": "fcbb186c7f424c55bc72a561e4915d93",
      "Id": "e2472652863e48b4b1a2a2d6c381bcda",
      "IsHidden": "False"
    },
    {
      "Start": "325fbc6b507541ed883cba0d1da1751d",
      "End": "679ac75d65c04727899b7e760449da85",
      "Id": "fdbb6ff9b1704dccbc8edde3c2367897",
      "IsHidden": "False"
    },
    {
      "Start": "371703e0234f479c82a16d0d8ccecbed",
      "End": "191c8fe93803431f904c3787fb153c3a",
      "Id": "2999b76515ec441fae3ad14566058871",
      "IsHidden": "False"
    },
    {
      "Start": "59b3a8e5c9264cfa90c1ffddec27ed39",
      "End": "32daef9adcde489aaa9e68462a9428d4",
      "Id": "acde23b8a4dc4c8690628fbe77ccdf6c",
      "IsHidden": "False"
    },
    {
      "Start": "5175b0d8d0424c72905c520f09587a47",
      "End": "41892e7987004b7586d0c9d2710ff6a7",
      "Id": "26d154d36e524ab59a278bb3e9f0c9f2",
      "IsHidden": "False"
    },
    {
      "Start": "a2cef7744a144336b38b2236a857e90a",
      "End": "71f8cf011e6b4a15ad95695c1f38769e",
      "Id": "2d5b91ca7eb84faeb9f2b545210883da",
      "IsHidden": "False"
    },
    {
      "Start": "868f3a1a0ebb46ef9744a7d8e3ab5382",
      "End": "21e78e4544af4ad4b25bcf66077176dc",
      "Id": "8ee6d59c19f54c64b1a2bba863f3bcd3",
      "IsHidden": "False"
    },
    {
      "Start": "868f3a1a0ebb46ef9744a7d8e3ab5382",
      "End": "446ac1f2f2cb4a10a4bddd02f6838fdc",
      "Id": "f028b17181be4f5c9d1299de39a7edb7",
      "IsHidden": "False"
    },
    {
      "Start": "875d8ac3ea69445db8cd74954a4a5b9e",
      "End": "7835588a90fd46638cb5591ebe2d4ff3",
      "Id": "b2f8a147a5f442cabff143f4b2bcc6a8",
      "IsHidden": "False"
    },
    {
      "Start": "38c569c0a0fa48aba0391a6a4a7aa43f",
      "End": "c0c3d06e6e4c44cfaa747491f6bc02b9",
      "Id": "7ae9c0f11b7e4141b7a9118e6746295c",
      "IsHidden": "False"
    },
    {
      "Start": "b76d2c064a8f485a94626e45cfa40940",
      "End": "7159e4bb42c54e00bd0e8f454826bfd3",
      "Id": "7774b73ded0441868b8684348d0c6b77",
      "IsHidden": "False"
    },
    {
      "Start": "9199dcab5ce2490f8a1c1ca8272f3bcc",
      "End": "66e6f94b1a804b089e7ae9ae29a51d34",
      "Id": "88714cfcfb0a437e9713980ba791dbf9",
      "IsHidden": "False"
    },
    {
      "Start": "9199dcab5ce2490f8a1c1ca8272f3bcc",
      "End": "5a0964279fc04e8eb9186756e6d19f9a",
      "Id": "56f9e933a7ef42eeab835083375410a6",
      "IsHidden": "False"
    },
    {
      "Start": "48472f6b30c740a191c65004a0d28142",
      "End": "3d960f537d254fd7b3186946508909ea",
      "Id": "2b4b019f32d345448c407c8ab6d4a8d0",
      "IsHidden": "False"
    },
    {
      "Start": "2fee28ca943e4231aa8522426bf93a24",
      "End": "ff0873e6c6cb43588a6510cdf3441445",
      "Id": "3bb523e38a0c43d79afc71f44364df5f",
      "IsHidden": "False"
    },
    {
      "Start": "cc6ce0ec22024232aa4982ab2031c971",
      "End": "a35d45d162524bb58852532d395787e0",
      "Id": "c47a714c81784d33acc1dc0a06a3c6f5",
      "IsHidden": "False"
    },
    {
      "Start": "ea68d0f209dd4cda8d96eb61e5c0adf5",
      "End": "6b4f058542a142a0a5655e45423a9a79",
      "Id": "a62ae26a53ef47a8b8ec8de07f62a154",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "DynamoFormaBeta",
      "Version": "4.2.3",
      "ReferenceType": "Package",
      "Nodes": [
        "907f82ea89dc42f5954500ba0a16e903",
        "7bd33bda161242278592bb6b125b608a",
        "581aa89a4b6d4e6597cf6dda678a4e71",
        "56625a3051a349d89c597d0075d8e1e6",
        "ad7c546d6eb84bc695e5ac7c25a709a5",
        "b33ea50bace949ba90c78c56eec1312a"
      ]
    }
  ],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.18",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.0",
      "Data": {}
    }
  ],
  "Author": "The Dynamo Team",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.4.0.6892",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -79.96867370605469,
      "EyeY": 23.700576782226562,
      "EyeZ": 75.54615020751953,
      "LookX": 6.234352111816406,
      "LookY": -8.555078506469727,
      "LookZ": 4.016181945800781,
      "UpX": 0.6352220177650452,
      "UpY": 0.6550093293190002,
      "UpZ": 0.4092135727405548
    },
    "ConnectorPins": [
      {
        "Left": 555.8573202187599,
        "Top": 2603.1856279590297,
        "IsHidden": false,
        "ConnectorGuid": "97371479-b845-40f4-a9ae-09263ed4333c"
      },
      {
        "Left": 555.8573202187599,
        "Top": 2398.2725212679848,
        "IsHidden": false,
        "ConnectorGuid": "7f9e4dfa-2980-42c7-91fd-1af28ee88a3a"
      },
      {
        "Left": 565.6385571983992,
        "Top": 554.0042131339537,
        "IsHidden": false,
        "ConnectorGuid": "df28ff9e-e9c8-4b96-9b90-0e4f221406f6"
      },
      {
        "Left": 555.8573202187599,
        "Top": 1755.9536234818697,
        "IsHidden": false,
        "ConnectorGuid": "7cd73244-b2eb-455d-97cd-c842674f71c3"
      },
      {
        "Left": -161.74711318870115,
        "Top": 1467.9992508132157,
        "IsHidden": false,
        "ConnectorGuid": "809cb75c-8c78-4217-94ee-7b340941cfb9"
      },
      {
        "Left": -3581.685056261604,
        "Top": -488.3511540806692,
        "IsHidden": false,
        "ConnectorGuid": "437d87f7-0b14-4be0-9ad2-b56cf12216ed"
      },
      {
        "Left": -2032.600621314291,
        "Top": 1168.054067681107,
        "IsHidden": false,
        "ConnectorGuid": "2dc73339-441d-4e72-9867-fcd41a22319c"
      },
      {
        "Left": -161.74711318870115,
        "Top": 1394.8465325559546,
        "IsHidden": false,
        "ConnectorGuid": "d0c58a62-85df-4c1f-894a-76d48ebeea52"
      },
      {
        "Left": -159.42865881222596,
        "Top": 1320.4171782566266,
        "IsHidden": false,
        "ConnectorGuid": "c66fcc41-e5e4-48e4-86d6-d99924e65cb7"
      },
      {
        "Left": 555.8573202187599,
        "Top": 2362.114229553504,
        "IsHidden": false,
        "ConnectorGuid": "cf59c61d-733e-416d-afb0-6d314a239bc2"
      },
      {
        "Left": 555.8573202187599,
        "Top": 2323.8665081703098,
        "IsHidden": false,
        "ConnectorGuid": "a0e9dda7-f838-49f2-b941-1d1199840993"
      },
      {
        "Left": 566.1171549867029,
        "Top": 520.4524405498373,
        "IsHidden": false,
        "ConnectorGuid": "ce6c9d2c-fcb4-44f0-9f2d-95f80836141f"
      },
      {
        "Left": -116.74711318870115,
        "Top": 1008.5202021931759,
        "IsHidden": false,
        "ConnectorGuid": "a0ce763c-2f36-4624-b0d4-4ab93dde61ab"
      }
    ],
    "NodeViews": [
      {
        "Id": "f83df84530ef40248d770be122c914df",
        "Name": "PolyCurve.Curves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1312.3974709679824,
        "Y": -532.6173359009777
      },
      {
        "Id": "dbe02ad69d7947d8ae4025efec0e6f33",
        "Name": "Geometry.DistanceTo",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -659.9576364691529,
        "Y": -330.4994080650281
      },
      {
        "Id": "c413b13e9d284b1da209a76b3690cd8d",
        "Name": "List.MinimumItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -402.5665786136515,
        "Y": -257.25969838175797
      },
      {
        "Id": "8114d6b276ee41b9b9173159d7208573",
        "Name": "List.IndexOf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -173.47256691383518,
        "Y": -354.40863502603816
      },
      {
        "Id": "1962ce00be6143c0b2feba92803004a1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1364.2298439952665,
        "Y": 1964.4135379719255
      },
      {
        "Id": "0a2bcb7259fd403a859716e044e80ec8",
        "Name": "PolyCurve.Curves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -263.41525964944867,
        "Y": 1938.0073900539142
      },
      {
        "Id": "b691e27b7ec14bd9a5a26480e05a0373",
        "Name": "Curve.OffsetMany",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2115.4414113340185,
        "Y": 1002.2120918454743
      },
      {
        "Id": "c30a87aecc564989801c77f0f3e9732c",
        "Name": "Curve.OffsetMany",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2255.608116103246,
        "Y": 2314.620984252103
      },
      {
        "Id": "7c418dec27b5461c8e4ddcd9d46c1f11",
        "Name": "List.RemoveItemAtIndex",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1376.9219905339924,
        "Y": 716.9650283389014
      },
      {
        "Id": "ef38f9beb2e842018d153157b503ad87",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1708.4817530159303,
        "Y": 705.9337544645412
      },
      {
        "Id": "37123a47558048798350cd1b3c4b5b0b",
        "Name": "Curve.ExtrudeAsSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5605.510507845399,
        "Y": 1256.4783804875453
      },
      {
        "Id": "daae408e9df54fca9f412f7e2e741e0a",
        "Name": "Curve.ExtrudeAsSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5332.48579412407,
        "Y": 1424.4995904489726
      },
      {
        "Id": "937ff23788664fed8c713ac9a3aea5e5",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5068.740121221907,
        "Y": 1619.1727736653445
      },
      {
        "Id": "8ba125a2e7bb4955b49a4d568e3a70fa",
        "Name": "Solid.Difference",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5927.298331671339,
        "Y": 1256.4783804875453
      },
      {
        "Id": "b5bc04df1b8f4bb59b0e3b00f6c51bcb",
        "Name": "Solid.ByUnion",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5626.653276491508,
        "Y": 1533.886180812783
      },
      {
        "Id": "1dd0f3530b4d45bd854e2ab02cb009ec",
        "Name": "Vector.ZAxis",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -263.41525964944867,
        "Y": 1766.6487016170083
      },
      {
        "Id": "303767ceab7946a9bb9dfc79ad6d8a3b",
        "Name": "Curve.ExtendStart",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1564.816639048211,
        "Y": 2010.8266942580408
      },
      {
        "Id": "278da172986c41f8885214a1d82a8e23",
        "Name": "Curve.ExtendEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1805.123464056178,
        "Y": 2015.5021187618927
      },
      {
        "Id": "9b5bcf3e397040c0939a0b99c053d936",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1359.10882173849,
        "Y": 2133.586629280722
      },
      {
        "Id": "6379d8b38a114c83aa4adfe371ef620f",
        "Name": "Dictionary.ByKeysValues",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9273.871764122689,
        "Y": 1534.885140976708
      },
      {
        "Id": "af0cc4d282ce4ccc9bfdd111c8f5cb69",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9009.392091182144,
        "Y": 1557.0314128915238
      },
      {
        "Id": "3901abf166344efba309dcc9e9b093da",
        "Name": "Orientation of Frontage (N, NE, E, SE, S, SW, W, NW)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5023.642677134101,
        "Y": 1404.6349836000913
      },
      {
        "Id": "059e46d978bd454a97cb850bf3810c06",
        "Name": "PolyCurve.Curves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1916.80909039153,
        "Y": 95.05084226819326
      },
      {
        "Id": "9b971566fca047e2978cd15d120a9d93",
        "Name": "Dictionary.ByKeysValues",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1610.900502978262,
        "Y": -56.94481955536821
      },
      {
        "Id": "4de703c5afaa41cc98b44bbb9d7561f8",
        "Name": "Dictionary.ValueAtKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1001.2925507219297,
        "Y": -73.59930322157788
      },
      {
        "Id": "6670532239b148d1a28f94f5cfba3ed4",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3183.4990136955585,
        "Y": 136.5873498663891
      },
      {
        "Id": "a8663841bc8848579d8c615100d85208",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4137.542030073779,
        "Y": 1060.1960129538738
      },
      {
        "Id": "1a45c6c2de85424facd8b54bc5cdae00",
        "Name": "Circle.ByCenterPointRadius",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2947.053847295948,
        "Y": -222.45071350601347
      },
      {
        "Id": "5bd9e24a197547faa48b7db9b72a72d0",
        "Name": "Polygon.RegularPolygon",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2356.5334669552385,
        "Y": 73.10530143222104
      },
      {
        "Id": "719bc07fcf7145e386dcbffdc50068bf",
        "Name": "Surface.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3292.65727350458,
        "Y": -53.823087517935164
      },
      {
        "Id": "59060a98a7274c63abf0f5eca5a79a52",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3535.6741060726017,
        "Y": 79.97955783904217
      },
      {
        "Id": "22e79808613f4ecf9e1f05769bf3611a",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3600.545402288083,
        "Y": -136.89287421173685
      },
      {
        "Id": "1c4ee39231a542869d784e0ae8ba4bb0",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2544.3510291523935,
        "Y": 198.20585868433636
      },
      {
        "Id": "d4a63d8119d0407bb809c22508393595",
        "Name": "Geometry.Rotate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2625.6570467268893,
        "Y": -52.33472566797764
      },
      {
        "Id": "8663bfc30a87422ba8f46842a8d37068",
        "Name": "Plane.ByOriginNormal",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2933.474706061098,
        "Y": 26.01609603774341
      },
      {
        "Id": "728bdb313b42431dbe137d0e430b6a33",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2782.1581203142614,
        "Y": 176.64805413150816
      },
      {
        "Id": "c8e7232582a546b99d711c58075b5836",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2063.326200352231,
        "Y": -96.84714264889499
      },
      {
        "Id": "01797f797f4c419bb6e09ba9927baea9",
        "Name": "Curve.PointAtParameter",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1011.0857318972648,
        "Y": -462.21388299069486
      },
      {
        "Id": "0c49a419011a4846b3e68b48bdbcf401",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1236.3495918614276,
        "Y": -405.268913492509
      },
      {
        "Id": "7890184c83fe4bd3bd0908eeebb9836f",
        "Name": "Curve.ByBlendBetweenCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3686.843570561225,
        "Y": 918.9975008750322
      },
      {
        "Id": "208ef72a15c7424c8274cf8f8b1b9343",
        "Name": "Curve.Reverse",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3443.180058114624,
        "Y": 836.1501553342922
      },
      {
        "Id": "cc24fc5858c843c9aac716b4611ad80b",
        "Name": "PolyCurve.CloseWithLine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4601.153641984472,
        "Y": 690.1785957622427
      },
      {
        "Id": "7b42708926a34341b41eb94386531b75",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4257.8969434669925,
        "Y": 690.1785957622427
      },
      {
        "Id": "43c7eeb9b44d465db9cbb4912892bebd",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4034.674868175202,
        "Y": 691.0721714347842
      },
      {
        "Id": "b5ca42c0154b4b4d9aecf34a59af0b9b",
        "Name": "PolyCurve.ByJoinedCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4131.882637925208,
        "Y": 1924.7271126013238
      },
      {
        "Id": "dbca96fe6c4541d0be6ff7d570198c37",
        "Name": "PolyCurve.CloseWithLine",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4427.79174843865,
        "Y": 1930.8385234040325
      },
      {
        "Id": "0d1c04f2d2d945c987f4d5600ebd6b51",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3957.0236049107098,
        "Y": 1927.100739105164
      },
      {
        "Id": "56f827fe04be4beeafc3752b12bc2f30",
        "Name": "Curve.ByBlendBetweenCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3618.1786087776427,
        "Y": 2029.3983436736312
      },
      {
        "Id": "a510abc2bba3466badbfa9b6bcf2478c",
        "Name": "Curve.Reverse",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3394.992534272764,
        "Y": 1930.4200797137282
      },
      {
        "Id": "cc33f9fc78704bf08e0b3de27e933e11",
        "Name": "Offset from Adjacent Property (meters)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5042.655384013248,
        "Y": 617.5695286501241
      },
      {
        "Id": "6f2db35c415649d4ba554af8ce9683cc",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1526.020599769351,
        "Y": 961.0972198155887
      },
      {
        "Id": "7c6728cc670048ae82a519c1319b08b1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1770.3743945162012,
        "Y": 2272.0705611079634
      },
      {
        "Id": "559eb26413d546b4b100643eae6db48c",
        "Name": "Offset from Frontage (meters)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5023.642677134101,
        "Y": 2329.000567480439
      },
      {
        "Id": "f422f145e93949ffa1216ba6597dd1f4",
        "Name": "Curve.OffsetMany",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2115.4414113340185,
        "Y": 1227.2120918454743
      },
      {
        "Id": "3b18bcba1b9647d7a25ee3bc34fa2ee7",
        "Name": "Curve.Length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2514.4414113340185,
        "Y": 1023.7120918454743
      },
      {
        "Id": "577de22a01ab40e8a1c48f3f420238cf",
        "Name": "Curve.Length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2514.4414113340185,
        "Y": 1171.7120918454743
      },
      {
        "Id": "511271d8be014a8b883ed91ed5d50a62",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3081.4414113340185,
        "Y": 1080.7120918454743
      },
      {
        "Id": "0e41cc7c43914614b431b5c72602cf03",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2817.4414113340185,
        "Y": 1080.7120918454743
      },
      {
        "Id": "a4a95f712e644db2a7373bc3f7596c36",
        "Name": "Curve.OffsetMany",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2248.2212703396053,
        "Y": 2538.2518644596744
      },
      {
        "Id": "89924c7339274dd7aae2225aff8bc31a",
        "Name": "Curve.Length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2552.652498738981,
        "Y": 2399.149855099743
      },
      {
        "Id": "5c804ebd973f422cb5591d346e6dec0d",
        "Name": "Curve.Length",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2555.0367820928104,
        "Y": 2523.9273506166023
      },
      {
        "Id": "778ad1e1127c442f8ded857c1071f634",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2814.923667659781,
        "Y": 2446.835522176253
      },
      {
        "Id": "b1fb279099b24482bcbf1c7150575671",
        "Name": "If",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3006.6749974816094,
        "Y": 2445.5228122199505
      },
      {
        "Id": "3224eb9a13a74a35a9a662676162c24a",
        "Name": "Height (meters)",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5023.642677134101,
        "Y": 1857.1695673311017
      },
      {
        "Id": "907f82ea89dc42f5954500ba0a16e903",
        "Name": "Element.Footprint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4740.542030073779,
        "Y": 1060.1960129538738
      },
      {
        "Id": "835dd08352004dd5b14f69ff5e6e32db",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4413.542030073779,
        "Y": 1060.1960129538738
      },
      {
        "Id": "7bd33bda161242278592bb6b125b608a",
        "Name": "Select Site Limit",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -5034.542030073779,
        "Y": 1060.1960129538738
      },
      {
        "Id": "581aa89a4b6d4e6597cf6dda678a4e71",
        "Name": "Constraint",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9599.968448219652,
        "Y": 1273.4724281473484
      },
      {
        "Id": "56625a3051a349d89c597d0075d8e1e6",
        "Name": "[Collect Site Id]",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9264.695204939451,
        "Y": 1208.9567980924994
      },
      {
        "Id": "ad7c546d6eb84bc695e5ac7c25a709a5",
        "Name": "Terrain.ElevationAt",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7911.864140371934,
        "Y": 1577.7360653731355
      },
      {
        "Id": "b33ea50bace949ba90c78c56eec1312a",
        "Name": "[Collect Terrain Mesh]",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -4993.985699746194,
        "Y": 2527.169028553173
      },
      {
        "Id": "de33543853c8426fa70496526ed1ac4a",
        "Name": "Geometry.Explode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6370.864140371934,
        "Y": 1645.7360653731355
      },
      {
        "Id": "2d9efd242b6643ffaa5ef1ce848d2f48",
        "Name": "Curve.StartPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6722.864140371934,
        "Y": 1565.7360653731355
      },
      {
        "Id": "10d48812b5514a119f247ebf58625ec7",
        "Name": "Curve.EndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6722.864140371934,
        "Y": 1725.7360653731355
      },
      {
        "Id": "20467ba84c2f46caa05d9e8a7ec10609",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7018.864140371934,
        "Y": 1628.7360653731355
      },
      {
        "Id": "a751ba237e3642108177647b0d0bdf86",
        "Name": "Point.PruneDuplicates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7270.864140371934,
        "Y": 1628.7360653731355
      },
      {
        "Id": "53e19c47fb244a1d8046e87e25ef7a7b",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7609.864140371934,
        "Y": 1548.7360653731355
      },
      {
        "Id": "b1b4436d324e4ccfbc860ce5299032c7",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7609.864140371934,
        "Y": 1708.7360653731355
      },
      {
        "Id": "150a6b381e7e48c39902ee62d223011c",
        "Name": "List.MaximumItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8226.864140371934,
        "Y": 1577.7360653731355
      },
      {
        "Id": "d9de1b55d4d34d21af1999d99b237342",
        "Name": "Geometry.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8520.093168846926,
        "Y": 1273.4724281473484
      }
    ],
    "Annotations": [
      {
        "Id": "d2eca69498744543a920776ccb83d92a",
        "Title": "Select Site Limit",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a8663841bc8848579d8c615100d85208",
          "907f82ea89dc42f5954500ba0a16e903",
          "835dd08352004dd5b14f69ff5e6e32db",
          "7bd33bda161242278592bb6b125b608a",
          "c9a2b86eff5f4817ab2e7df7da009e27",
          "7b0434076ed542d9bdcd6441a5f28873",
          "2d7b106ce08a437eb3d61d45448976a5"
        ],
        "HasNestedGroups": false,
        "Left": -5044.542030073779,
        "Top": 886.1960129538738,
        "Width": 1093.0,
        "Height": 306.0,
        "FontSize": 72.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 1002.1960129538738,
        "InitialHeight": 203.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dc7edaeeaca8416bb3679fbaedbc60d6",
        "Title": "FrontageSelectionSet",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f83df84530ef40248d770be122c914df",
          "01797f797f4c419bb6e09ba9927baea9",
          "0c49a419011a4846b3e68b48bdbcf401",
          "d96ad5447573447b961fb0cae2cc6d80"
        ],
        "HasNestedGroups": false,
        "Left": -1322.3974709679824,
        "Top": -605.6173359009777,
        "Width": 594.8117390707175,
        "Height": 332.34842240846865,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -532.6173359009777,
        "InitialHeight": 272.34842240846865,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "e9252f555ad94ed3b32c5b431ce2c76d",
        "Title": "Set Adjacency offset",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cc33f9fc78704bf08e0b3de27e933e11"
        ],
        "HasNestedGroups": false,
        "Left": -5052.655384013248,
        "Top": 328.5695286501241,
        "Width": 387.0,
        "Height": 421.0,
        "FontSize": 72.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 617.5695286501241,
        "InitialHeight": 145.0,
        "TextblockHeight": 279.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "4763cd5a0f80497997c38bcb817ef3af",
        "Title": "Set Main Frontage",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "059e46d978bd454a97cb850bf3810c06",
          "9b971566fca047e2978cd15d120a9d93",
          "4de703c5afaa41cc98b44bbb9d7561f8",
          "c8e7232582a546b99d711c58075b5836",
          "50c4d32c7f7046c79fc53053cfd58503",
          "0ee61e7c9e374649bfecd0cbf3b3ca08",
          "4993e56fcd7c421a833853bd53566b3b"
        ],
        "HasNestedGroups": false,
        "Left": -2073.326200352231,
        "Top": -219.59930322157788,
        "Width": 1350.0336496303012,
        "Height": 446.65014548977115,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -146.59930322157788,
        "InitialHeight": 386.65014548977115,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "9d1170519f2d4e579508be736d42b776",
        "Title": "Frontage Edge",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dbe02ad69d7947d8ae4025efec0e6f33",
          "c413b13e9d284b1da209a76b3690cd8d",
          "8114d6b276ee41b9b9173159d7208573",
          "ac9287d23be241d191a1ee3ff6629980"
        ],
        "HasNestedGroups": false,
        "Left": -691.9576364691529,
        "Top": -476.4994080650281,
        "Width": 723.4850695553178,
        "Height": 351.2397096832701,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -403.4994080650281,
        "InitialHeight": 291.2397096832701,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "1cefb64c74c84da1882fc445c789f564",
        "Title": "Set Frontage offset",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "559eb26413d546b4b100643eae6db48c"
        ],
        "HasNestedGroups": false,
        "Left": -5033.642677134101,
        "Top": 2040.0005674804388,
        "Width": 319.0,
        "Height": 421.0,
        "FontSize": 72.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 2329.000567480439,
        "InitialHeight": 145.0,
        "TextblockHeight": 279.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "2a4ea795c1b246caa24073bd4f992013",
        "Title": "Create Constraint",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6379d8b38a114c83aa4adfe371ef620f",
          "af0cc4d282ce4ccc9bfdd111c8f5cb69",
          "581aa89a4b6d4e6597cf6dda678a4e71",
          "56625a3051a349d89c597d0075d8e1e6",
          "f57f2f19ce064b4fb54b43fe0a70c2f5"
        ],
        "HasNestedGroups": false,
        "Left": 8999.392091182144,
        "Top": 1113.4724281473484,
        "Width": 869.5763570375075,
        "Height": 585.5589847441754,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 1186.4724281473484,
        "InitialHeight": 370.3675738794193,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "0d612b5adae3487bae4ea914c675f8f6",
        "Title": "Offsets unpredictable. This gets the \"inside one\"",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b691e27b7ec14bd9a5a26480e05a0373",
          "f422f145e93949ffa1216ba6597dd1f4",
          "3b18bcba1b9647d7a25ee3bc34fa2ee7",
          "577de22a01ab40e8a1c48f3f420238cf",
          "511271d8be014a8b883ed91ed5d50a62",
          "0e41cc7c43914614b431b5c72602cf03",
          "359cf99df25547088d1ac4f91e6849b0",
          "2b8a98864b6f4befb8e3f92a07348480"
        ],
        "HasNestedGroups": false,
        "Left": 2094.4414113340185,
        "Top": 856.2120918454743,
        "Width": 1190.0,
        "Height": 580.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 929.2120918454743,
        "InitialHeight": 645.1930811527329,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "344009c9944a4a8bbaf8cedbc2ac8b55",
        "Title": "Offsets unpredictable. This gets the \"inside one\"",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c30a87aecc564989801c77f0f3e9732c",
          "a4a95f712e644db2a7373bc3f7596c36",
          "89924c7339274dd7aae2225aff8bc31a",
          "5c804ebd973f422cb5591d346e6dec0d",
          "778ad1e1127c442f8ded857c1071f634",
          "b1fb279099b24482bcbf1c7150575671",
          "efb9b158151a4fd9b0cf8fe277f2cd04",
          "8a3add1510164cbfbfd81fe8ff181a78"
        ],
        "HasNestedGroups": false,
        "Left": 2236.108116103246,
        "Top": 2168.620984252103,
        "Width": 973.5668813783632,
        "Height": 578.6308802075714,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 2241.620984252103,
        "InitialHeight": 441.6308802075714,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "9e843bc2a5864ef48b6c73be76e89d29",
        "Title": "Set Total allowable height",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3224eb9a13a74a35a9a662676162c24a"
        ],
        "HasNestedGroups": false,
        "Left": -5033.642677134101,
        "Top": 1568.1695673311017,
        "Width": 319.77333333333337,
        "Height": 421.0,
        "FontSize": 72.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 1857.1695673311017,
        "InitialHeight": 145.0,
        "TextblockHeight": 279.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "836b3b1aa39c4a3cbd19ea6c5f84c2b0",
        "Title": "Set Frontage Orientation",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3901abf166344efba309dcc9e9b093da"
        ],
        "HasNestedGroups": false,
        "Left": -5033.642677134101,
        "Top": 1331.6349836000913,
        "Width": 479.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 1404.6349836000913,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "cf38a5fa710b49a397554184a0dc9192",
        "Title": "Total Building Height Volume",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "37123a47558048798350cd1b3c4b5b0b",
          "daae408e9df54fca9f412f7e2e741e0a",
          "937ff23788664fed8c713ac9a3aea5e5",
          "8ba125a2e7bb4955b49a4d568e3a70fa",
          "b5bc04df1b8f4bb59b0e3b00f6c51bcb",
          "0906fcfb3f034dd2a03186e70a5b3372",
          "b5870c1460cf482e8d396825cb8022f1",
          "c547070ee4784eb09121fd3be0f471ba",
          "c3d366e6117645fca3848ba7505436f7"
        ],
        "HasNestedGroups": false,
        "Left": 5058.740121221907,
        "Top": 1062.4783804875453,
        "Width": 1108.5582104494315,
        "Height": 730.6943931777992,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 1135.4783804875453,
        "InitialHeight": 565.6943931777992,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "35ec08d523e04cbda5cac673a6201f26",
        "Title": "Calculate Adjacency Footprint",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7c418dec27b5461c8e4ddcd9d46c1f11",
          "ef38f9beb2e842018d153157b503ad87",
          "7890184c83fe4bd3bd0908eeebb9836f",
          "208ef72a15c7424c8274cf8f8b1b9343",
          "cc24fc5858c843c9aac716b4611ad80b",
          "7b42708926a34341b41eb94386531b75",
          "43c7eeb9b44d465db9cbb4912892bebd",
          "6f2db35c415649d4ba554af8ce9683cc",
          "982bbc6f7b464aea85c74a954b9ffcf9",
          "c67f68a2f2e8459abf2ce70c8db38ea6",
          "dc1ca057e6b1402aa443e57d3f903029",
          "4cc1a0466541401faacbf90e8d57b081",
          "0d612b5adae3487bae4ea914c675f8f6"
        ],
        "HasNestedGroups": true,
        "Left": 1346.9219905339924,
        "Top": 556.9650283389014,
        "Width": 3521.23165145048,
        "Height": 894.2470635065729,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 629.9650283389014,
        "InitialHeight": 742.6657246396246,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "f6fc20e7daa04b9e99b5c10a2df55cee",
        "Title": "Calculate Frontage Footprint",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1962ce00be6143c0b2feba92803004a1",
          "303767ceab7946a9bb9dfc79ad6d8a3b",
          "278da172986c41f8885214a1d82a8e23",
          "b5ca42c0154b4b4d9aecf34a59af0b9b",
          "dbca96fe6c4541d0be6ff7d570198c37",
          "0d1c04f2d2d945c987f4d5600ebd6b51",
          "56f827fe04be4beeafc3752b12bc2f30",
          "a510abc2bba3466badbfa9b6bcf2478c",
          "9b5bcf3e397040c0939a0b99c053d936",
          "7c6728cc670048ae82a519c1319b08b1",
          "30204edfe953440db81bddef36d00f72",
          "fdd412d5cea34d8087db775a077a7c6a",
          "033d50612c22477d8e9c9f4dda9d0999",
          "344009c9944a4a8bbaf8cedbc2ac8b55"
        ],
        "HasNestedGroups": true,
        "Left": 1349.10882173849,
        "Top": 1799.8385234040325,
        "Width": 3345.68292670016,
        "Height": 962.4133410556419,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 1872.8385234040325,
        "InitialHeight": 825.4133410556419,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "84c74e0ca6d741ba9a70f1b41b82ca19",
        "Title": "Identify primary street frontage of the building site",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1a45c6c2de85424facd8b54bc5cdae00",
          "5bd9e24a197547faa48b7db9b72a72d0",
          "719bc07fcf7145e386dcbffdc50068bf",
          "59060a98a7274c63abf0f5eca5a79a52",
          "1c4ee39231a542869d784e0ae8ba4bb0",
          "d4a63d8119d0407bb809c22508393595",
          "8663bfc30a87422ba8f46842a8d37068",
          "728bdb313b42431dbe137d0e430b6a33",
          "6670532239b148d1a28f94f5cfba3ed4",
          "22e79808613f4ecf9e1f05769bf3611a",
          "a76541eb664f403d83a5f19c4cbfe324",
          "f6c920113dac439abed5fa53ee9a8564",
          "2f403d6a484347adb1843dbca98fe56a",
          "02df92f6643b4168b0012108099a85ec",
          "fce8aebef767411fb04403feefe692e8",
          "7ea8b4f3455a40ff831739bddaf6354a",
          "dc7edaeeaca8416bb3679fbaedbc60d6",
          "4763cd5a0f80497997c38bcb817ef3af",
          "9d1170519f2d4e579508be736d42b776"
        ],
        "HasNestedGroups": true,
        "Left": -3610.545402288083,
        "Top": -678.6173359009777,
        "Width": 3652.072835374248,
        "Height": 1008.823194585314,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -605.6173359009777,
        "InitialHeight": 905.823194585314,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "ab117e172d3441b9a7add6b6957c32fd",
        "Title": "Move Constraint up to highest-elevation on Terrain as per Site Limit",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ad7c546d6eb84bc695e5ac7c25a709a5",
          "de33543853c8426fa70496526ed1ac4a",
          "2d9efd242b6643ffaa5ef1ce848d2f48",
          "10d48812b5514a119f247ebf58625ec7",
          "20467ba84c2f46caa05d9e8a7ec10609",
          "a751ba237e3642108177647b0d0bdf86",
          "53e19c47fb244a1d8046e87e25ef7a7b",
          "b1b4436d324e4ccfbc860ce5299032c7",
          "150a6b381e7e48c39902ee62d223011c",
          "d9de1b55d4d34d21af1999d99b237342"
        ],
        "HasNestedGroups": false,
        "Left": 6360.864140371934,
        "Top": 1200.4724281473484,
        "Width": 2427.2290284749924,
        "Height": 669.2636372257871,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 1273.4724281473484,
        "InitialHeight": 556.7717804823978,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c9a2b86eff5f4817ab2e7df7da009e27",
        "Title": "Remove List Structure",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -4395.042030073779,
        "Top": 1010.1960129538738,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "835dd08352004dd5b14f69ff5e6e32db"
      },
      {
        "Id": "7b0434076ed542d9bdcd6441a5f28873",
        "Title": "Select Site Limit in Forma",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -5016.042030073779,
        "Top": 1010.1960129538738,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "7bd33bda161242278592bb6b125b608a"
      },
      {
        "Id": "2d7b106ce08a437eb3d61d45448976a5",
        "Title": "Get Site Limit's Footprint",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -4704.542030073779,
        "Top": 1010.1960129538738,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "907f82ea89dc42f5954500ba0a16e903"
      },
      {
        "Id": "f57f2f19ce064b4fb54b43fe0a70c2f5",
        "Title": "Create constraint for the acitve project using the geometry created using the specificied inputs and preset propeties.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 9570.968448219652,
        "Top": 1194.4724281473484,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "581aa89a4b6d4e6597cf6dda678a4e71"
      },
      {
        "Id": "a76541eb664f403d83a5f19c4cbfe324",
        "Title": "Create surface from curve",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3558.045402288083,
        "Top": -186.89287421173685,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "22e79808613f4ecf9e1f05769bf3611a"
      },
      {
        "Id": "f6c920113dac439abed5fa53ee9a8564",
        "Title": "Find Midpoint",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3208.65727350458,
        "Top": -103.82308751793516,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "719bc07fcf7145e386dcbffdc50068bf"
      },
      {
        "Id": "2f403d6a484347adb1843dbca98fe56a",
        "Title": "Create Circle",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2854.553847295948,
        "Top": -272.45071350601347,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "1a45c6c2de85424facd8b54bc5cdae00"
      },
      {
        "Id": "02df92f6643b4168b0012108099a85ec",
        "Title": "Create Plane",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2858.974706061098,
        "Top": -23.98390396225659,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "8663bfc30a87422ba8f46842a8d37068"
      },
      {
        "Id": "fce8aebef767411fb04403feefe692e8",
        "Title": "Create Polygon with 8 sides to represent the different directions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2357.5334669552385,
        "Top": 8.10530143222104,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "5bd9e24a197547faa48b7db9b72a72d0"
      },
      {
        "Id": "d1b06a2f53c6441382ea73c299d80f25",
        "Title": "New Note",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2821.3104992157587,
        "Top": 1877.9351265484372,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7ea8b4f3455a40ff831739bddaf6354a",
        "Title": "Roate Circle 22.5 degrees to get the correct orientation",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2629.1570467268893,
        "Top": -117.33472566797764,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d4a63d8119d0407bb809c22508393595"
      },
      {
        "Id": "50c4d32c7f7046c79fc53053cfd58503",
        "Title": "Create curves from each side of the polygon",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1930.30909039153,
        "Top": 45.050842268193264,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "059e46d978bd454a97cb850bf3810c06"
      },
      {
        "Id": "0ee61e7c9e374649bfecd0cbf3b3ca08",
        "Title": "Match Curve to the Relevant Direction",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1594.400502978262,
        "Top": -106.94481955536821,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "9b971566fca047e2978cd15d120a9d93"
      },
      {
        "Id": "4993e56fcd7c421a833853bd53566b3b",
        "Title": "Select the curve that matches the value the user has input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1031.2925507219297,
        "Top": -138.59930322157788,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "4de703c5afaa41cc98b44bbb9d7561f8"
      },
      {
        "Id": "d96ad5447573447b961fb0cae2cc6d80",
        "Title": "Find the midpoint of each side of the site boundary",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1032.5857318972648,
        "Top": -512.2138829906949,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "01797f797f4c419bb6e09ba9927baea9"
      },
      {
        "Id": "ac9287d23be241d191a1ee3ff6629980",
        "Title": "Find the closest side of the site boundary to the selected orientation",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -681.9576364691529,
        "Top": -395.4994080650281,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "dbe02ad69d7947d8ae4025efec0e6f33"
      },
      {
        "Id": "982bbc6f7b464aea85c74a954b9ffcf9",
        "Title": "The non frontage sides of the site boundary are assumed to be adjacent to a neighbouring property and follow the same offset.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1356.9219905339924,
        "Top": 637.9650283389014,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "7c418dec27b5461c8e4ddcd9d46c1f11"
      },
      {
        "Id": "c67f68a2f2e8459abf2ce70c8db38ea6",
        "Title": "Create polycuve from the sides",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1750.4817530159303,
        "Top": 655.9337544645412,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "ef38f9beb2e842018d153157b503ad87"
      },
      {
        "Id": "359cf99df25547088d1ac4f91e6849b0",
        "Title": "Offset the relevant sides of the site boundary by the specified amount in both directions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2104.4414113340185,
        "Top": 937.2120918454743,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b691e27b7ec14bd9a5a26480e05a0373"
      },
      {
        "Id": "2b8a98864b6f4befb8e3f92a07348480",
        "Title": "Selecting the inner curve",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3100.4414113340185,
        "Top": 1030.7120918454743,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "511271d8be014a8b883ed91ed5d50a62"
      },
      {
        "Id": "dc1ca057e6b1402aa443e57d3f903029",
        "Title": "Create a polycurve to combine the curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4608.153641984472,
        "Top": 640.1785957622427,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "cc24fc5858c843c9aac716b4611ad80b"
      },
      {
        "Id": "4cc1a0466541401faacbf90e8d57b081",
        "Title": "Create curves to join the 2 curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3735.343570561225,
        "Top": 868.9975008750321,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "7890184c83fe4bd3bd0908eeebb9836f"
      },
      {
        "Id": "0906fcfb3f034dd2a03186e70a5b3372",
        "Title": "Extract the extruded offset geometry from the extruded site boundary",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5890.298331671339,
        "Top": 1143.4783804875453,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "8ba125a2e7bb4955b49a4d568e3a70fa"
      },
      {
        "Id": "b5870c1460cf482e8d396825cb8022f1",
        "Title": "Extrude the offsets",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5387.48579412407,
        "Top": 1326.4995904489726,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "daae408e9df54fca9f412f7e2e741e0a"
      },
      {
        "Id": "c547070ee4784eb09121fd3be0f471ba",
        "Title": "Extrude the Site Boundary to the specified height",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5580.510507845399,
        "Top": 1206.4783804875453,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "37123a47558048798350cd1b3c4b5b0b"
      },
      {
        "Id": "c3d366e6117645fca3848ba7505436f7",
        "Title": "Combine the offset geometry",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5634.653276491508,
        "Top": 1435.886180812783,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b5bc04df1b8f4bb59b0e3b00f6c51bcb"
      },
      {
        "Id": "30204edfe953440db81bddef36d00f72",
        "Title": "Extends the size of the curve for the frontage to make sure it overlaps with the other sides when extruded in a later step.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1533.316639048211,
        "Top": 1931.8266942580408,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "303767ceab7946a9bb9dfc79ad6d8a3b"
      },
      {
        "Id": "efb9b158151a4fd9b0cf8fe277f2cd04",
        "Title": "Offset the frontage side of the site boundary by the specified amount in both directions",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2246.108116103246,
        "Top": 2249.620984252103,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "c30a87aecc564989801c77f0f3e9732c"
      },
      {
        "Id": "8a3add1510164cbfbfd81fe8ff181a78",
        "Title": "Selecting the inner curve",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3025.6749974816094,
        "Top": 2395.5228122199505,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b1fb279099b24482bcbf1c7150575671"
      },
      {
        "Id": "fdd412d5cea34d8087db775a077a7c6a",
        "Title": "Create curves to join the 2 curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3666.6786087776427,
        "Top": 1979.3983436736312,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "56f827fe04be4beeafc3752b12bc2f30"
      },
      {
        "Id": "033d50612c22477d8e9c9f4dda9d0999",
        "Title": "Create a polycurve to combine the curves",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4434.79174843865,
        "Top": 1880.8385234040325,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "dbca96fe6c4541d0be6ff7d570198c37"
      }
    ],
    "X": 648.5400238103134,
    "Y": 238.28037660360152,
    "Zoom": 0.08546303423410122
  }
}