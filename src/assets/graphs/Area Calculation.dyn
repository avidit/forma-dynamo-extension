{
  "Uuid": "c0005023-6ba3-4dbe-97d5-772847fb9c2e",
  "IsCustomNode": false,
  "Description": "Calculate area of Buildings based on FunctionID and Unit Type. Requires the GFAUnit representation. The graph will visualize what is included and excluded. NOTE: results can only be seen if you turn off the visibility of Buildings.",
  "Name": "Area Calculation",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "4c7d5f431c424f21b2f0e02d78ada885",
      "Name": "Function",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "Unspecified",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 2
    },
    {
      "Id": "2ad4a84894bf4aeaac374dc2fbfe35b6",
      "Name": "Unit Type",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "Unspecified",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 2
    },
    {
      "Id": "09a96de2f36b4a3285dea7c7d77d2bda",
      "Name": "[Get all Elements from Site]",
      "Type": "string",
      "Type2": "string",
      "Value": "{\"elements\":[{\"urn\":\"urn:adsk-forma-elements:proposal:pro_mnpo1vppxk:a95de7fb-8aff-4fb7-8488-db57574f3d39:1743445002091\",\"path\":\"root\",\"worldTransform\":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}],\"region\":\"EMEA\"}",
      "Description": "Get all the element for the current proposal in the Forma Player Extension"
    }
  ],
  "Outputs": [
    {
      "Id": "66f916b5eeeb42b781d4e872ce33fef8",
      "Name": "Included",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "Id": "0030c2f8a42149e7b4a4be7e220a451b",
      "Name": "Excluded",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "Id": "deae016bc0504f4089afcd4079a467cb",
      "Name": "Building Included",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "Id": "75bd93d9aebb4219bd3a66f61b5ccb64",
      "Name": "Calculated Area",
      "Type": "string",
      "InitialValue": "null m2",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c99d2d85dfeb49d09f9dd5aa4246996a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fcc42d9ebebd4e9d81cb624b237f064c",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49bad9e6108746449984173d41e8983c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.Properties",
      "Replication": "Auto",
      "Description": "Get the Properties of an Element.\n\nElement.Properties: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5d84ddc2d1884f9dab760253d5afe808",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "789acdf55fab4dc4b26651eeaae86ac9",
          "Name": "prop",
          "Description": "prop",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e5a30de0b4a4407a33dbb1668ad4140",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "prop == \"proposal\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "70f621a502534804803719f8fcf1c856",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3cb8f4b5745c464bbcedc92e13aecaf2",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "851a3455255742ca960c9390c4e88fff",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ad605593ea34962a8bb11e89e16b271",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fba15b39f8274d2b8dc0ec0cc57d7225",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1ba78f3a5e3c497a99742adcef6b54f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b9c835189310416db9dff23b1b347171",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af776aa6c7624d19928a113d27468849",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.Children",
      "Replication": "Auto",
      "Description": "Return the direct Children of the given element.\n\nElement.Children: Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d1bc51c8761c45e6a0c178aa62a4053b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "17a32e1b33184322ad963f62899c85e5",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5de11153ca90441fa12320937a535d1e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.Properties",
      "Replication": "Auto",
      "Description": "Get the Properties of an Element.\n\nElement.Properties: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "73f5b35922a74225b15eddae700c3aea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "03c4cb9b09f741d58a15e3e0adcdcf1a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dac3713225614ef696f655c4ad0cb502",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db42e2ce539c437c8f790801def242f6",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "484bd9cee0aa47d8922d6d3dffcd1679",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3514a8e8e4744b709488fe0d0bb595b1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c4255ca307a84dffb97d34bd4ea94daa",
          "Name": "elements",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a85bf077e3d74d449c51deeaecc7f09c",
          "Name": "vertices",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3379d932d8f0451fab6cd29b80c2c0fc",
          "Name": "indices",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.VolumeMesh@Forma.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Get a visual Volume Mesh of the representation. Use MeshToolkit for simple mesh operations.\n\nElement.VolumeMesh (elements: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "31d6e80e717d40838a18a759cea19b36",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "17a73b02531d4cf6a104c847c57e5b2e",
          "Name": "vertices",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2fbc5097cd04acba1e79a12bbb48769",
          "Name": "indices",
          "Description": "int[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3955aefa549c4b589a4af53913aa6498",
          "Name": "Mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.ByVerticesAndIndices@Autodesk.DesignScript.Geometry.Point[],int[]",
      "Replication": "Auto",
      "Description": "Create a new Mesh from supplied vertices and indices. Vertices should not overlap. Indices should be sets of three integers indicating the three locations in the virtices array of the three points of a triangle\n\nMesh.ByVerticesAndIndices (vertices: Point[], indices: int[]): Mesh"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b02057058ec246b68f9161efd5b20fc3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "16ee2f9ef3d9406f9fe4ccfa79ce24df",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12c2c969e3954e3c9c3f58f1218b96b7",
          "Name": "key",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3906b83ca49438c89a0b4ce9ef414db",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.HasRepresentation@string",
      "Replication": "Auto",
      "Description": "Check if the Element has the given representation.\n\nElement.HasRepresentation (key: string): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5a770c0ebdba479cbf746b25a3345597",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "12ef915d44664404acc9e686246933b4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"gfaUnits\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0045c4620a154be3b780a9497accf5ca",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "62e524da8cbb468d9779a714ea6c0fcf",
          "Name": "elements",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7cb07d66dcd46d8a2b482f7419aa5c5",
          "Name": "curve",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a67fa23c707d4d2d9e56e62858532b65",
          "Name": "areaType",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89a57745e1824d61a3ddeb84106f1769",
          "Name": "functionId",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.GFAUnits@Forma.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Get the Gross Floor Area of an element.\n\nElement.GFAUnits (elements: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "IsVisibleDropDownTextBlock": true,
      "SerializedItems": [
        {
          "Name": "Residential",
          "Item": "residential"
        },
        {
          "Name": "Commercial",
          "Item": "commercial"
        },
        {
          "Name": "Unspecified",
          "Item": "unspecified"
        }
      ],
      "SelectedIndex": 2,
      "SelectedString": "Unspecified",
      "Id": "4c7d5f431c424f21b2f0e02d78ada885",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e42a15830ff84d938cdc4874b5bf1840",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "186764c8f7074e84861dd6ae1d8cd468",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "bfd98996b6f049ec9f3f977aa65914e3",
          "Name": "target",
          "Description": "target",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf2f9a8bda7a4519817cf8913dd514b2",
          "Name": "value",
          "Description": "value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0adfd1e857a45eb985c9c5ca472d6b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "target == \"unspecified\" || target == value;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "IsVisibleDropDownTextBlock": true,
      "SerializedItems": [
        {
          "Name": "Living Unit",
          "Item": "LIVING_UNIT"
        },
        {
          "Name": "Core",
          "Item": "CORE"
        },
        {
          "Name": "Unspecified",
          "Item": "unspecified"
        }
      ],
      "SelectedIndex": 2,
      "SelectedString": "Unspecified",
      "Id": "2ad4a84894bf4aeaac374dc2fbfe35b6",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e19cd73b7044e3889e066f213894327",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7df20720c3f34fac91da1fce72a0b014",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "980d324451dc446595925e7f09072afb",
          "Name": "target",
          "Description": "target",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d641bf8e16d74368bbe67bad9150056b",
          "Name": "value",
          "Description": "value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33e2c46b3cab4fd9bffbf2137b22fce7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "target == \"unspecified\" || target == value;"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.And, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "f6edcfd2f1774c2296ebf0cd2b7d9f9e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "83c9d86fa53a44fdb71f3e029dce2c21",
          "Name": "bool0",
          "Description": "Boolean #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13164476a29b44639b1513967c61b0ff",
          "Name": "bool1",
          "Description": "Boolean #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6cce5a239504f40aef6a3f656fe5060",
          "Name": "bool",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Boolean AND: Returns True only if all of the inputs are true. If any is false, returns False."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "23d97db153d74941a707820b0339ea43",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e4bd34b1d48841c1b0906d59a9f36e5b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50697cc9e6984af8922bcd33fdf14d3a",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc66e31bee444ef9bf6467250434870c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28e906eb65aa47128b40771e9e4ce0f3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "66f916b5-eeeb-42b7-81d4-e872ce33fef8 Preview",
        "EyeX": 43.38821029663086,
        "EyeY": 67.41607284545898,
        "EyeZ": 233.36370849609375,
        "LookX": -0.00261688232421875,
        "LookY": -0.001800537109375,
        "LookZ": -0.002105712890625,
        "UpX": -0.3663995862007141,
        "UpY": 0.882621705532074,
        "UpZ": -0.2945002317428589
      },
      "VariableInputPorts": true,
      "Id": "66f916b5eeeb42b781d4e872ce33fef8",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "0906d85d511e4c43800e6a0e4126dbb9",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fdbd89b79424745b20429b662577f94",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6dcdb708f5e4ef0aaae7eabe065eb38",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "0030c2f8-a421-49e7-b4a4-be7e220a451b Preview",
        "EyeX": -143.272216796875,
        "EyeY": 154.23355102539062,
        "EyeZ": 703.8072509765625,
        "LookX": 145.37435913085938,
        "LookY": -157.48890686035156,
        "LookZ": -702.6427001953125,
        "UpX": 0.04242589697241783,
        "UpY": 0.9540387392044067,
        "UpZ": -0.2050585001707077
      },
      "VariableInputPorts": true,
      "Id": "0030c2f8a42149e7b4a4be7e220a451b",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "e4a5f080d8ba4513af126302d50c5d86",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc3d85aa84c548d18ec875a604b67a97",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "539f223cfcbb4f5eaccc8b2c29f8898e",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "deae016b-c050-4f40-89af-cd4079a467cb Preview",
        "EyeX": 70.37263488769531,
        "EyeY": 53.95896911621094,
        "EyeZ": 287.45245361328125,
        "LookX": -24.503387451171875,
        "LookY": -12.020637512207031,
        "LookZ": -18.942535400390625,
        "UpX": -0.2862609326839447,
        "UpY": 0.9322459697723389,
        "UpZ": -0.22129638493061066
      },
      "VariableInputPorts": true,
      "Id": "deae016bc0504f4089afcd4079a467cb",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "495e20860ba243ceaceee21ad394fe11",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90a40ce68ffb4bb4a8474f346a9a6647",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1d1a41a4c8fc4a99acde366489f100e2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "63e7b282b2b848e6a7e162d5b26eb544",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbf82d0e30b14ddb89e3d398ee6f5183",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e371a23f5aea45118e4ddb5c8d070a4a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "174b4763e23c40bb8c7937cd01364f78",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c1a9526878704f6b87826e03109e9421",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "93851500bffc4c8bbf9077e772b75b4b",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b38f694feac74e5bb43df5b917be394a",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.GetAllChildren",
      "Replication": "Auto",
      "Description": "Return all Children of the given element.\n\nElement.GetAllChildren: Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7a0f3314c5b04275a93f3f6318acc84b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "98817700995d4cb49b748f32ccf63083",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcd13a45506f4f338b09e5b1dfb6d354",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.GetAllChildren",
      "Replication": "Auto",
      "Description": "Return all Children of the given element.\n\nElement.GetAllChildren: Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4008d69ee8c444459821d3ff9c37d36a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "34f623f893eb4c13b240d06e96923ff5",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d37db8a918644af9c96cfb58f416dad",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.GetAllChildren",
      "Replication": "Auto",
      "Description": "Return all Children of the given element.\n\nElement.GetAllChildren: Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "81025afb58824aecb492c95a8388d785",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5b30027016ee4715b3335bd2c1978d42",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2123c77971f3494c9427407417b955e9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c41cc13301b643b999c9ed578f13af73",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f8291f10c0a74e88a322aaa5864464d1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7bd6f700463644aa92f468e21b193e8e",
          "Name": "elements",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f8a60a345c745588e41b286013a43f4",
          "Name": "vertices",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adb9ebd438674b2aae1ccb25a4aead02",
          "Name": "indices",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.VolumeMesh@Forma.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Get a visual Volume Mesh of the representation. Use MeshToolkit for simple mesh operations.\n\nElement.VolumeMesh (elements: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e691d48f68e14d45b98eefe84d9cad0b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b1d1195c93e5448badd76afec21ee93d",
          "Name": "vertices",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "493d85245a3e442eb1eaf4b0af0c8eef",
          "Name": "indices",
          "Description": "int[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79f6da02c07c4eb69e1ca26c43bce6d7",
          "Name": "Mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.ByVerticesAndIndices@Autodesk.DesignScript.Geometry.Point[],int[]",
      "Replication": "Auto",
      "Description": "Create a new Mesh from supplied vertices and indices. Vertices should not overlap. Indices should be sets of three integers indicating the three locations in the virtices array of the three points of a triangle\n\nMesh.ByVerticesAndIndices (vertices: Point[], indices: int[]): Mesh"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "374063c0-722e-4af4-af0b-5fe7467ecb47 Preview",
        "EyeX": -11.924960136413574,
        "EyeY": 18.502038955688477,
        "EyeZ": 25.470638275146484,
        "LookX": 6.924960136413574,
        "LookY": -7.502038955688477,
        "LookZ": -33.470638275146484,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "VariableInputPorts": true,
      "Id": "374063c0722e4af4af0b5fe7467ecb47",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "76a70bf26f054c6ca0cb117d5a1c2f59",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30cc51cc667f4f698e762226169b8ffe",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0130f80b455d4e36a8e20a19767c26ba",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a98bdea252c04803a85a48ee1cee69be",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2959e47eceba493096b4b6d723ac374f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43c489d08d9f44d09abb59d7f073d81d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "95086b9b63f04ac48b5913c74f5e8bb4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "686e7fb5844540428d9c882a54b006c4",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37e17d9ee1f149939515c1c6fa86be0f",
          "Name": "Surface",
          "Description": "A Surface on the interior of the curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Patch",
      "Replication": "Auto",
      "Description": "Patch a closed Curve\n\nCurve.Patch ( ): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "680e4033455c4c21bbc26eb150d20c24",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c7ba36b05260417e8698f7e5607978c3",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b12011e4fe245e9ab12ce2a56756d21",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cba375d5a2e46e7abc5561d22ac077a",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "afa759d11f3449979692f46a183c06cb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6a142ed4551b4d0392fc219212f0eb61",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3079bc904e7a4d4fbd690f158e99897b",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cd73f0651cd4bba98ff09c6c64fbc27",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b64074fb633e4e2c8c80eced5c8feff7",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "677ffc410126481b9482cf7f0c4f6757",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de325a02fde9431e99fba8586b4c4ca9",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "74ea0b32a2e548bd95faa04c31807de9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "10ea60a6d4a0491fb58797ec40e42e62",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3fe327797eb435e91ab3c66d2830183",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "74284be7cd904ebd9107f1eac033cfdd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7ed1ed52b22a4dffbb98f1ffeea2e43a",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cb7fc5251014cab9e7ea97547c1e40f",
          "Name": "key",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d2dba74e5084755bad46049c6e3b9f5",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.HasRepresentation@string",
      "Replication": "Auto",
      "Description": "Check if the Element has the given representation.\n\nElement.HasRepresentation (key: string): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e59ba4bc2b114db391a86a8bcf2341db",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fd1853675a0a4fc0b120def21ae420f4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"volumeMesh\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8647ae8ff5bf4f3494dfbf1a0f2402a1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6307ea1c7ade42e89e3ab4d93b427889",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6664c0e60f0b4b48be1cecd666c82dc9",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "685094d04fc940f3a2c25969cd83aeaa",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c73ca198fee541d4ad0bc5eb995e6a3f",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "191f9ee541fd4ecaa2be371a8f8891fb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "879e3db6ceea475386d30ae330bd34e0",
          "Name": "mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e98ca1548fa4f70a989a8172ae5d3ba",
          "Name": "meshColoring",
          "Description": "single color, triangle colors, or vertex colors\n\nColor[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e61838181e646ff8980bed7b5cd04a7",
          "Name": "MeshDisplay",
          "Description": "MeshDisplay",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Display.MeshDisplay.ByMeshColor@Autodesk.Dynamo.MeshToolkit.Mesh,DSCore.Color[]",
      "Replication": "Auto",
      "Description": "Display mesh by single color, triangle colors, or vertex colors\n\nMeshDisplay.ByMeshColor (mesh: Mesh, meshColoring: Color[]): MeshDisplay"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7e5857d93c064e0681d840e7b961226c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5518eef7efda4bb2b42a00e3077494cb",
          "Name": "mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3309aba4e2c4176a82c7ffef6546573",
          "Name": "meshColoring",
          "Description": "single color, triangle colors, or vertex colors\n\nColor[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d07e0fedbac4b5084f4880b41e01a43",
          "Name": "MeshDisplay",
          "Description": "MeshDisplay",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Display.MeshDisplay.ByMeshColor@Autodesk.Dynamo.MeshToolkit.Mesh,DSCore.Color[]",
      "Replication": "Auto",
      "Description": "Display mesh by single color, triangle colors, or vertex colors\n\nMeshDisplay.ByMeshColor (mesh: Mesh, meshColoring: Color[]): MeshDisplay"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 215,
        "G": 25,
        "B": 28,
        "A": 255
      },
      "Id": "811d0333950545959d882e3799f296b3",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f65f2f2b96643979944e867ecbd8b63",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 44,
        "G": 123,
        "B": 182,
        "A": 255
      },
      "Id": "b7cc2e26c2aa412b89de8f450cfd1ef5",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b695deb00879430ea123e14a58d8878c",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 253,
        "G": 174,
        "B": 97,
        "A": 255
      },
      "Id": "a04c0ae22e6f4a8dba71083b38dc19e5",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ee39714175740e78e6b4e4161801821",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "799a0edb759e4086a67c4c63ddc801f8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b3f5135c552e47e7a3ebfb27dea732b8",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8aa89fbe41dd4cc79d74e5528efc4c3f",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ba8a3702d684fb7b011e3857a2ab47c",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0d0f867c47614afb962f8d95f5718e74",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f2f14e75c5648f1af46a1e3e105edc5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"category\";"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ApplyFunction, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "718176714f1c4179a193252981f30f8c",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d5484210ac924df79923e6c5e32c1679",
          "Name": "function",
          "Description": "Function to apply.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "755bdf6cc3124ee9a4f4f2908e7a7aff",
          "Name": "argument0",
          "Description": "Argument #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a82b67c037a24a4cb4d55f24741385d2",
          "Name": "result",
          "Description": "Result of application.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of a function with given arguments"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7d0ba19b099e4e91a1913b654d70716f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6678b08a39a44127a8bd80ddc559a1bd",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0adb10d6a57a4f9dad5b2b7879a519a5",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7b2fe1dd20e747f689e2ef09eced1935",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9003bddf2a714307b339d8b2ebe308a4",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e17941693624195a15991065730f306",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b7dd34f99c2480fbd30eeabe3c2ae49",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a301f1f545054114a5e26d1e64692429",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7b0469119204505b36d8172ff8b9557",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"category\";"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ApplyFunction, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "9302774e23f14277a6a7c9792ef473e5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "da8839e855414c8a8d88187b20c4f244",
          "Name": "function",
          "Description": "Function to apply.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1dfe47247db0482c9c6d59efc9f0f9c5",
          "Name": "argument0",
          "Description": "Argument #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37768b7ef420485fbd7864d7399dfa2e",
          "Name": "result",
          "Description": "Result of application.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of a function with given arguments"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "6060c504cdcb49fea321d2f70f23ba46",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "2a811b62f8e34b6fbc94d133a14d0cd9",
          "Name": "prop",
          "Description": "prop",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b28b02490734400800d18c14aab92a2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "prop == \"building\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d7a77a91cc0f453c88a07b332eec7ff8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "106df40125ba48549950831f943f9c8e",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7153640ea6c843dba25a32655b8ec25f",
          "Name": "vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb9ebadd0419477896143b8167725cd4",
          "Name": "distance",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f032fb889e844906969202c9b1ce5a18",
          "Name": "Mesh",
          "Description": "Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Replication": "Auto",
      "Description": "Translate the Mesh in the direction of the input Vector by the input distance\n\nMesh.Translate (vector: Vector, distance: double = 0): Mesh"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "bdf738bef1d34a50b86ea5f5bd24d477",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a369763653c4d53924ff285c588abf7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0.02;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cdec1ac725f64c4a96d0427999314144",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6d867627fb3f4dcc9095db37a7441afe",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f2d7d2a36cf4da49f3c4e3c38f62813",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "533a06f1a48b4bbfa426e10514f9797f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c5f14a92ea034c9e971745e4fc4f6add",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "71aba3504a354912bab72cfe50efeeb4",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10b5bcb500de4e84b12488dfb5f8fee5",
          "Name": "Vector[]",
          "Description": "Vector[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.TriangleNormals",
      "Replication": "Auto",
      "Description": "Returns the normals for each triangle face in a given mesh.\n\nMesh.TriangleNormals ( ): Vector[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e5f89740bf534d0d89cd4432c4602763",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b7a845ad176f4140856a6fc7555b44c0",
          "Name": "mesh",
          "Description": "Autodesk.Dynamo.MeshToolkit.Mesh",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0d34707bf964aafa53aba3fbd47b2a0",
          "Name": "Mesh[]",
          "Description": "Mesh[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Dynamo.MeshToolkit.Mesh.Explode",
      "Replication": "Auto",
      "Description": "Converts Mesh triangles to individual meshes and returns them.\n\nMesh.Explode ( ): Mesh[]"
    },
    {
      "ConcreteType": "Forma.NodeModels.GetAllElementsHttp, DynamoForma.NodeModels",
      "Id": "09a96de2f36b4a3285dea7c7d77d2bda",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2f4c1ac880084cb2956e365fc7cee092",
          "Name": "elements",
          "Description": "Forma Elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all the element for the current proposal in the Forma Player Extension",
      "InputValue": "{\"elements\":[{\"urn\":\"urn:adsk-forma-elements:proposal:pro_mnpo1vppxk:a95de7fb-8aff-4fb7-8488-db57574f3d39:1743445002091\",\"path\":\"root\",\"worldTransform\":[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}],\"region\":\"EMEA\"}"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aef4462bbf0446ebacbb5112d682a69c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b8f3bed9a1fa46068eb0fc5a6cbbf797",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "638e263861d74e47a0a8325e40e909a5",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double",
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 72.0,
      "WatchHeight": 64.0,
      "Id": "75bd93d9aebb4219bd3a66f61b5ccb64",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "8a65b4c1dae748c887453f46459c7b57",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "061017db009748a98217d2c2b6c5966b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "aaa3177e87d0410aac0068e6f6ae9b2b",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "c81d41c9360e4b41851f1bd8fb3cd459",
          "Name": "area",
          "Description": "area",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49be4bd2fc3d424d9a0c3c51070a6d4a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "area[0] + \" m2\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "Id": "12be3d5a1ddc467ea1614d5e03a1c7c6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "16746aa7d1b646d3bfb1714104f477a5",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89477853a4b741d9b9e9a731e3ac7dd9",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "356a7d0f58b444169e07ef6e3e9f19b3",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "904e2d4a830b4bdcb8f5b44393753ad5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "559dd6de7945467ab141387c45b8782b",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02e32033cc0a42aea052c325aafb4053",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "54248ed2af3245a5939f35e55a5a6b3d",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "31b5825a30864d20aa801163ff477ed2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\".\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "026fcf47af6845cd910eca662591df5d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "083c348451194135ae445cadec6844a5",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21d766adc0c640e893dea48b8c0a1742",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "46d2cb9f61054e62bf5ebd6716ddb6fa",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "346d7853a01e474f98e1e61779ec22f9",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a26572be73a54a21ba17b2ff7776b929",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 121,
        "G": 190,
        "B": 212,
        "A": 30
      },
      "Id": "c5f613e2eb98474288e3ffa1f373c007",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "207c975a22824cda9fc9dc03b1404532",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d68759d59832402f8aa9ba619b4b2e53",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d1f9c00ec5cb4ab89f638f0f67932072",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ea3064a6f62430194be3a3551273bad",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.Children",
      "Replication": "Auto",
      "Description": "Return the direct Children of the given element.\n\nElement.Children: Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dc8d6d57b3a54031824d0e11235a2ca5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "952d82c0056647729172187ecca932f1",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a79b56ace84472597b77189ecf07320",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.Properties",
      "Replication": "Auto",
      "Description": "Get the Properties of an Element.\n\nElement.Properties: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "83f8e70d93d448d19df6288b5ae5afdd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "bc04291c381749b886cca306fb33d471",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b463f33efe4a458586bdd82a24d4e0dc",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d9357beefaf40e88f00e394cefe8a5f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d6327c0eac046dba3f803d7b40c6110",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ApplyFunction, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "a22a4bc2bcf64a2683c8d00dfe484968",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "0049a1ddcf4d4d20b3fd04fdc104d154",
          "Name": "function",
          "Description": "Function to apply.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2246795a9fb8499f9c796d64cb945cde",
          "Name": "argument0",
          "Description": "Argument #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81b49d7bd2d04b7e9732e1538de11c43",
          "Name": "result",
          "Description": "Result of application.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of a function with given arguments"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b92aff8132b044a2ae63ef76c8a81892",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7149b18e59a7456bb155bbc2d61ee1f2",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6e7b9b03c7044cb82850121adee7602",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00c8b1ec3485441babf92c48cd61765c",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "b740723cbb4548a9bf67051ea095892d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "4768dfa8676d44079cd170d1208dc16f",
          "Name": "prop",
          "Description": "prop",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b451f9afabfe4b1c8f673dc129d21486",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "prop == \"composition\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "58413ce9a14c428990dff823e2d8fb76",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d3e691ab2854c6bb25fc9618f478821",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"category\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ca8ad82adad349dbb5a8db55f097985f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a4702c189c1f4f6cac1ad1a5ddc35f20",
          "Name": "element",
          "Description": "Forma.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "756d7ce3ad364f27a9ee6cb60da184b2",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Forma.Elements.Element.GetAllChildren",
      "Replication": "Auto",
      "Description": "Return all Children of the given element.\n\nElement.GetAllChildren: Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "267c81028cd14fcab5b5f94afb6d4163",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2ab56ef15dc8429c88071cd649b0f9a6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c270c3b0574e19a8dc7e96313bc8b5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da45c4847d2740c6b4c4271fa34a2a67",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a243404b45d84cc4b4802fda2ef80143",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "3424e67a1907425dae8004c675903cf4",
          "Name": "AllPropoaslElements",
          "Description": "AllPropoaslElements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c0735b3f24e4675a72f269a117e4335",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "AllPropoaslElements;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "ee018b393c5d49309888240dfcd111e3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3b546abf8385443292c184807f6a0114",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a1b6be410c44d8eaf54b79854d36951",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21d3f03f77ff43eeb25798f00779b340",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b56c772f8c624489a4aaa767ee30c91a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "407c3b6a0edb459f964986d47de38df2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "067b1fd6612b41b3affce7d95d4c3195",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a0cc43957954721999fefc9137fc72e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "49bad9e6108746449984173d41e8983c",
      "End": "755bdf6cc3124ee9a4f4f2908e7a7aff",
      "Id": "1154c7e5abf64430a18817177dedf4e5",
      "IsHidden": "False"
    },
    {
      "Start": "3e5a30de0b4a4407a33dbb1668ad4140",
      "End": "851a3455255742ca960c9390c4e88fff",
      "Id": "e9486f31bb89445a82eb61ea9bf03888",
      "IsHidden": "False"
    },
    {
      "Start": "9ad605593ea34962a8bb11e89e16b271",
      "End": "b9c835189310416db9dff23b1b347171",
      "Id": "216431f39d844e35a451bb1fbfcc2f10",
      "IsHidden": "False"
    },
    {
      "Start": "9ad605593ea34962a8bb11e89e16b271",
      "End": "d1f9c00ec5cb4ab89f638f0f67932072",
      "Id": "b3365cffb0e440bea0aa5168e6c7ca92",
      "IsHidden": "False"
    },
    {
      "Start": "af776aa6c7624d19928a113d27468849",
      "End": "407c3b6a0edb459f964986d47de38df2",
      "Id": "964f88a240244602995239399f54fa63",
      "IsHidden": "False"
    },
    {
      "Start": "5de11153ca90441fa12320937a535d1e",
      "End": "1dfe47247db0482c9c6d59efc9f0f9c5",
      "Id": "9fd3bdcf10a8477b8c9f2771983ce21d",
      "IsHidden": "False"
    },
    {
      "Start": "db42e2ce539c437c8f790801def242f6",
      "End": "34f623f893eb4c13b240d06e96923ff5",
      "Id": "fec1de69a9dd4d549bd08183e148d792",
      "IsHidden": "False"
    },
    {
      "Start": "db42e2ce539c437c8f790801def242f6",
      "End": "5b30027016ee4715b3335bd2c1978d42",
      "Id": "dd58725e4e014e9ea39e139be0ffee11",
      "IsHidden": "False"
    },
    {
      "Start": "a85bf077e3d74d449c51deeaecc7f09c",
      "End": "17a73b02531d4cf6a104c847c57e5b2e",
      "Id": "4f0ae1e13f0e49b3a560cb095cd91549",
      "IsHidden": "False"
    },
    {
      "Start": "3379d932d8f0451fab6cd29b80c2c0fc",
      "End": "d2fbc5097cd04acba1e79a12bbb48769",
      "Id": "7f4f2daa978041dea5b4c0427b7c640a",
      "IsHidden": "False"
    },
    {
      "Start": "3955aefa549c4b589a4af53913aa6498",
      "End": "879e3db6ceea475386d30ae330bd34e0",
      "Id": "b8a4812b80ac41a88b3a9076e5b6c084",
      "IsHidden": "False"
    },
    {
      "Start": "a3906b83ca49438c89a0b4ce9ef414db",
      "End": "6678b08a39a44127a8bd80ddc559a1bd",
      "Id": "29ae501d2c374dfc8e11bced27eed306",
      "IsHidden": "False"
    },
    {
      "Start": "12ef915d44664404acc9e686246933b4",
      "End": "12c2c969e3954e3c9c3f58f1218b96b7",
      "Id": "c6df8eebeb0e4138a9731e25308fca40",
      "IsHidden": "False"
    },
    {
      "Start": "b7cb07d66dcd46d8a2b482f7419aa5c5",
      "End": "686e7fb5844540428d9c882a54b006c4",
      "Id": "831e15afb3de47c99884d86bdced16c3",
      "IsHidden": "False"
    },
    {
      "Start": "a67fa23c707d4d2d9e56e62858532b65",
      "End": "d641bf8e16d74368bbe67bad9150056b",
      "Id": "f1ac430f37ae4440b72e193628b339d5",
      "IsHidden": "False"
    },
    {
      "Start": "89a57745e1824d61a3ddeb84106f1769",
      "End": "cf2f9a8bda7a4519817cf8913dd514b2",
      "Id": "03d70d4907b94660a831f8d7b873c734",
      "IsHidden": "False"
    },
    {
      "Start": "e42a15830ff84d938cdc4874b5bf1840",
      "End": "bfd98996b6f049ec9f3f977aa65914e3",
      "Id": "b1834788fd1540549f90bf475ee963dd",
      "IsHidden": "False"
    },
    {
      "Start": "b0adfd1e857a45eb985c9c5ca472d6b8",
      "End": "13164476a29b44639b1513967c61b0ff",
      "Id": "c09e0f2114644a9cbb40de333385570e",
      "IsHidden": "False"
    },
    {
      "Start": "1e19cd73b7044e3889e066f213894327",
      "End": "980d324451dc446595925e7f09072afb",
      "Id": "21746dad85874f62beeeab8a4fb61b02",
      "IsHidden": "False"
    },
    {
      "Start": "33e2c46b3cab4fd9bffbf2137b22fce7",
      "End": "83c9d86fa53a44fdb71f3e029dce2c21",
      "Id": "9c96405cb9e14e0db37df1309b3a7697",
      "IsHidden": "False"
    },
    {
      "Start": "f6cce5a239504f40aef6a3f656fe5060",
      "End": "50697cc9e6984af8922bcd33fdf14d3a",
      "Id": "9653f46428be42ca869aada4deb118ee",
      "IsHidden": "False"
    },
    {
      "Start": "fc66e31bee444ef9bf6467250434870c",
      "End": "6a142ed4551b4d0392fc219212f0eb61",
      "Id": "a3d8eeabaf204bba92d8a279e79c4810",
      "IsHidden": "False"
    },
    {
      "Start": "fc66e31bee444ef9bf6467250434870c",
      "End": "677ffc410126481b9482cf7f0c4f6757",
      "Id": "eead9cd1e6524bdc85a4b9f1f02d0fb4",
      "IsHidden": "False"
    },
    {
      "Start": "fc66e31bee444ef9bf6467250434870c",
      "End": "083c348451194135ae445cadec6844a5",
      "Id": "7c3305de3cf94994a43bbbbaf7aa4ab6",
      "IsHidden": "False"
    },
    {
      "Start": "28e906eb65aa47128b40771e9e4ce0f3",
      "End": "c7ba36b05260417e8698f7e5607978c3",
      "Id": "e2e613412eb642f79fc3a915b0b05dbc",
      "IsHidden": "False"
    },
    {
      "Start": "28e906eb65aa47128b40771e9e4ce0f3",
      "End": "346d7853a01e474f98e1e61779ec22f9",
      "Id": "627da606268546279da94ca042602342",
      "IsHidden": "False"
    },
    {
      "Start": "e371a23f5aea45118e4ddb5c8d070a4a",
      "End": "93851500bffc4c8bbf9077e772b75b4b",
      "Id": "9cba4ae68591434f96be17712ff0f98d",
      "IsHidden": "False"
    },
    {
      "Start": "174b4763e23c40bb8c7937cd01364f78",
      "End": "98817700995d4cb49b748f32ccf63083",
      "Id": "c226ec653af4437ca93ddb53c3565366",
      "IsHidden": "False"
    },
    {
      "Start": "b38f694feac74e5bb43df5b917be394a",
      "End": "a98bdea252c04803a85a48ee1cee69be",
      "Id": "3776ea6396e1472082edeb6bc346d031",
      "IsHidden": "False"
    },
    {
      "Start": "b38f694feac74e5bb43df5b917be394a",
      "End": "7ed1ed52b22a4dffbb98f1ffeea2e43a",
      "Id": "02492001bc0540e587ed171961627dc1",
      "IsHidden": "False"
    },
    {
      "Start": "b38f694feac74e5bb43df5b917be394a",
      "End": "6307ea1c7ade42e89e3ab4d93b427889",
      "Id": "24798f125e934582bd0ebaa75f653708",
      "IsHidden": "False"
    },
    {
      "Start": "fcd13a45506f4f338b09e5b1dfb6d354",
      "End": "7bd6f700463644aa92f468e21b193e8e",
      "Id": "3e7b802f48d34c75bf0dc1689d1f9685",
      "IsHidden": "False"
    },
    {
      "Start": "8d37db8a918644af9c96cfb58f416dad",
      "End": "16ee2f9ef3d9406f9fe4ccfa79ce24df",
      "Id": "7c85c2ec5f9c4d538b636289b26b74d4",
      "IsHidden": "False"
    },
    {
      "Start": "c41cc13301b643b999c9ed578f13af73",
      "End": "63e7b282b2b848e6a7e162d5b26eb544",
      "Id": "bd75151d2bea4c93b1c5c5ada6ba4aa3",
      "IsHidden": "False"
    },
    {
      "Start": "2f8a60a345c745588e41b286013a43f4",
      "End": "b1d1195c93e5448badd76afec21ee93d",
      "Id": "e1ffc2c89caf41d2b3d2078a75b7b657",
      "IsHidden": "False"
    },
    {
      "Start": "adb9ebd438674b2aae1ccb25a4aead02",
      "End": "493d85245a3e442eb1eaf4b0af0c8eef",
      "Id": "4e04c4c40bc946709ebc33201fdf5822",
      "IsHidden": "False"
    },
    {
      "Start": "79f6da02c07c4eb69e1ca26c43bce6d7",
      "End": "b7a845ad176f4140856a6fc7555b44c0",
      "Id": "a3ff7099afb14f9cbf3841179d51e5e3",
      "IsHidden": "False"
    },
    {
      "Start": "43c489d08d9f44d09abb59d7f073d81d",
      "End": "62e524da8cbb468d9779a714ea6c0fcf",
      "Id": "d61fb23d64d5451a8f5e75d0e99a102f",
      "IsHidden": "False"
    },
    {
      "Start": "37e17d9ee1f149939515c1c6fa86be0f",
      "End": "e4bd34b1d48841c1b0906d59a9f36e5b",
      "Id": "0e51b2a4223148f0bf1e119bff100c19",
      "IsHidden": "False"
    },
    {
      "Start": "4cba375d5a2e46e7abc5561d22ac077a",
      "End": "e4a5f080d8ba4513af126302d50c5d86",
      "Id": "295e642b9a5f4930885dae721215adcb",
      "IsHidden": "False"
    },
    {
      "Start": "0cd73f0651cd4bba98ff09c6c64fbc27",
      "End": "0906d85d511e4c43800e6a0e4126dbb9",
      "Id": "ce4c82eacbc24dffad0e301f2148b3b6",
      "IsHidden": "False"
    },
    {
      "Start": "de325a02fde9431e99fba8586b4c4ca9",
      "End": "10ea60a6d4a0491fb58797ec40e42e62",
      "Id": "c151963b8507491ba664e9f08bdf8f0d",
      "IsHidden": "False"
    },
    {
      "Start": "b3fe327797eb435e91ab3c66d2830183",
      "End": "b8f3bed9a1fa46068eb0fc5a6cbbf797",
      "Id": "f233ed36c84c48e1b335dac7d97d94d8",
      "IsHidden": "False"
    },
    {
      "Start": "7d2dba74e5084755bad46049c6e3b9f5",
      "End": "6664c0e60f0b4b48be1cecd666c82dc9",
      "Id": "7a47e7bd97534ae1bd449badbc9e66a6",
      "IsHidden": "False"
    },
    {
      "Start": "fd1853675a0a4fc0b120def21ae420f4",
      "End": "5cb7fc5251014cab9e7ea97547c1e40f",
      "Id": "0d28e135d51c451f9647af1f1c5a4b08",
      "IsHidden": "False"
    },
    {
      "Start": "685094d04fc940f3a2c25969cd83aeaa",
      "End": "c4255ca307a84dffb97d34bd4ea94daa",
      "Id": "ebe877689cce4c9ba613f4fe1a8894e5",
      "IsHidden": "False"
    },
    {
      "Start": "3e61838181e646ff8980bed7b5cd04a7",
      "End": "495e20860ba243ceaceee21ad394fe11",
      "Id": "38ed79326a0d4ad2bb8b7e414a411323",
      "IsHidden": "False"
    },
    {
      "Start": "7d07e0fedbac4b5084f4880b41e01a43",
      "End": "76a70bf26f054c6ca0cb117d5a1c2f59",
      "Id": "04f06ec449fc46ae90c943d9da456712",
      "IsHidden": "False"
    },
    {
      "Start": "7f65f2f2b96643979944e867ecbd8b63",
      "End": "f3309aba4e2c4176a82c7ffef6546573",
      "Id": "f362985cef654aa39cb8bbb52e5e8b6b",
      "IsHidden": "False"
    },
    {
      "Start": "b695deb00879430ea123e14a58d8878c",
      "End": "3079bc904e7a4d4fbd690f158e99897b",
      "Id": "1094210ae2b54f46b3f119a3a3f39b78",
      "IsHidden": "False"
    },
    {
      "Start": "0ee39714175740e78e6b4e4161801821",
      "End": "7b12011e4fe245e9ab12ce2a56756d21",
      "Id": "d490568478944c21baf5beb9351c23d2",
      "IsHidden": "False"
    },
    {
      "Start": "7ba8a3702d684fb7b011e3857a2ab47c",
      "End": "d5484210ac924df79923e6c5e32c1679",
      "Id": "83f47f1dbfe74363ad965a48a03aca6b",
      "IsHidden": "False"
    },
    {
      "Start": "8f2f14e75c5648f1af46a1e3e105edc5",
      "End": "8aa89fbe41dd4cc79d74e5528efc4c3f",
      "Id": "4090cc2561b046afac25be2132b96ef8",
      "IsHidden": "False"
    },
    {
      "Start": "a82b67c037a24a4cb4d55f24741385d2",
      "End": "789acdf55fab4dc4b26651eeaae86ac9",
      "Id": "a357f22670db4929be2c40ec98bd8341",
      "IsHidden": "False"
    },
    {
      "Start": "0adb10d6a57a4f9dad5b2b7879a519a5",
      "End": "bbf82d0e30b14ddb89e3d398ee6f5183",
      "Id": "93e5af4db9944a50b50e99179468e7b3",
      "IsHidden": "False"
    },
    {
      "Start": "2b7dd34f99c2480fbd30eeabe3c2ae49",
      "End": "da8839e855414c8a8d88187b20c4f244",
      "Id": "033b2c5befd0477c892d75f4dc1ae218",
      "IsHidden": "False"
    },
    {
      "Start": "c7b0469119204505b36d8172ff8b9557",
      "End": "3e17941693624195a15991065730f306",
      "Id": "e37e37760bb84454879bdf1fb0eae873",
      "IsHidden": "False"
    },
    {
      "Start": "37768b7ef420485fbd7864d7399dfa2e",
      "End": "2a811b62f8e34b6fbc94d133a14d0cd9",
      "Id": "8d93c877f8ec405d829f1b080b2f43d8",
      "IsHidden": "False"
    },
    {
      "Start": "0b28b02490734400800d18c14aab92a2",
      "End": "dac3713225614ef696f655c4ad0cb502",
      "Id": "a0d11b43b8a34e1d8a43d610e2fd9996",
      "IsHidden": "False"
    },
    {
      "Start": "f032fb889e844906969202c9b1ce5a18",
      "End": "5518eef7efda4bb2b42a00e3077494cb",
      "Id": "1ef5682b640b4a1a9e14ea5760d6378d",
      "IsHidden": "False"
    },
    {
      "Start": "6a369763653c4d53924ff285c588abf7",
      "End": "fb9ebadd0419477896143b8167725cd4",
      "Id": "cd2aa19611e74b57a398f7fddea03b1d",
      "IsHidden": "False"
    },
    {
      "Start": "533a06f1a48b4bbfa426e10514f9797f",
      "End": "106df40125ba48549950831f943f9c8e",
      "Id": "89cb3edf910049ca94a13bcee3ef6364",
      "IsHidden": "False"
    },
    {
      "Start": "533a06f1a48b4bbfa426e10514f9797f",
      "End": "71aba3504a354912bab72cfe50efeeb4",
      "Id": "175be71c5e2145b6852fc7b5fc74eaee",
      "IsHidden": "False"
    },
    {
      "Start": "10b5bcb500de4e84b12488dfb5f8fee5",
      "End": "7153640ea6c843dba25a32655b8ec25f",
      "Id": "c609cb04a03b4061a7567ea0db580404",
      "IsHidden": "False"
    },
    {
      "Start": "f0d34707bf964aafa53aba3fbd47b2a0",
      "End": "6d867627fb3f4dcc9095db37a7441afe",
      "Id": "f643f5eab5404e75a625f599e953a9f8",
      "IsHidden": "False"
    },
    {
      "Start": "2f4c1ac880084cb2956e365fc7cee092",
      "End": "fcc42d9ebebd4e9d81cb624b237f064c",
      "Id": "0e488e5ad4a64038b6e729a15ac335c0",
      "IsHidden": "False"
    },
    {
      "Start": "2f4c1ac880084cb2956e365fc7cee092",
      "End": "3cb8f4b5745c464bbcedc92e13aecaf2",
      "Id": "bde7c33e1d384e69a582275ffba7100e",
      "IsHidden": "False"
    },
    {
      "Start": "638e263861d74e47a0a8325e40e909a5",
      "End": "559dd6de7945467ab141387c45b8782b",
      "Id": "d678a2e3dc0b4ce98e714a791ef0c6f7",
      "IsHidden": "False"
    },
    {
      "Start": "49be4bd2fc3d424d9a0c3c51070a6d4a",
      "End": "8a65b4c1dae748c887453f46459c7b57",
      "Id": "07c02fae28c346c288fe5d57c1e3bfe6",
      "IsHidden": "False"
    },
    {
      "Start": "356a7d0f58b444169e07ef6e3e9f19b3",
      "End": "c81d41c9360e4b41851f1bd8fb3cd459",
      "Id": "db7fabd2d77c483c8315e02d9e526a82",
      "IsHidden": "False"
    },
    {
      "Start": "02e32033cc0a42aea052c325aafb4053",
      "End": "16746aa7d1b646d3bfb1714104f477a5",
      "Id": "d81e09a2b78c499db635ac1fbb66da90",
      "IsHidden": "False"
    },
    {
      "Start": "31b5825a30864d20aa801163ff477ed2",
      "End": "89477853a4b741d9b9e9a731e3ac7dd9",
      "Id": "5dad03ede4be4e22a6a890b7cd849de2",
      "IsHidden": "False"
    },
    {
      "Start": "21d766adc0c640e893dea48b8c0a1742",
      "End": "4fdbd89b79424745b20429b662577f94",
      "Id": "6f412feedae0427f954eebe50b1b26c2",
      "IsHidden": "False"
    },
    {
      "Start": "a26572be73a54a21ba17b2ff7776b929",
      "End": "bc3d85aa84c548d18ec875a604b67a97",
      "Id": "355d9eb4c1904f56b2ecd774423c9da5",
      "IsHidden": "False"
    },
    {
      "Start": "207c975a22824cda9fc9dc03b1404532",
      "End": "1e98ca1548fa4f70a989a8172ae5d3ba",
      "Id": "fef2b0b63e18427d8c37ddb77b067eda",
      "IsHidden": "False"
    },
    {
      "Start": "2ea3064a6f62430194be3a3551273bad",
      "End": "952d82c0056647729172187ecca932f1",
      "Id": "3c56cd593e7b4a6a908ccc45d447d7a3",
      "IsHidden": "False"
    },
    {
      "Start": "2ea3064a6f62430194be3a3551273bad",
      "End": "bc04291c381749b886cca306fb33d471",
      "Id": "79c130f2358044eebb9719820c2cc6be",
      "IsHidden": "False"
    },
    {
      "Start": "7a79b56ace84472597b77189ecf07320",
      "End": "2246795a9fb8499f9c796d64cb945cde",
      "Id": "a435b614f04c40478606deeb5d67e766",
      "IsHidden": "False"
    },
    {
      "Start": "4d9357beefaf40e88f00e394cefe8a5f",
      "End": "a4702c189c1f4f6cac1ad1a5ddc35f20",
      "Id": "22ec094a079c43599174314f7b00ed44",
      "IsHidden": "False"
    },
    {
      "Start": "81b49d7bd2d04b7e9732e1538de11c43",
      "End": "4768dfa8676d44079cd170d1208dc16f",
      "Id": "bfac24e831f94a738b67a3409bc76b8e",
      "IsHidden": "False"
    },
    {
      "Start": "00c8b1ec3485441babf92c48cd61765c",
      "End": "0049a1ddcf4d4d20b3fd04fdc104d154",
      "Id": "b8f77881a37549d1b556681394e3b195",
      "IsHidden": "False"
    },
    {
      "Start": "b451f9afabfe4b1c8f673dc129d21486",
      "End": "b463f33efe4a458586bdd82a24d4e0dc",
      "Id": "abdf25fe0802439983d38b6b1a53a7d3",
      "IsHidden": "False"
    },
    {
      "Start": "9d3e691ab2854c6bb25fc9618f478821",
      "End": "b6e7b9b03c7044cb82850121adee7602",
      "Id": "725204c55ff64cdd8c06d8b88f79ca6f",
      "IsHidden": "False"
    },
    {
      "Start": "756d7ce3ad364f27a9ee6cb60da184b2",
      "End": "2ab56ef15dc8429c88071cd649b0f9a6",
      "Id": "5c418e718b8c489f9d7c6d5ac6c0afdb",
      "IsHidden": "False"
    },
    {
      "Start": "da45c4847d2740c6b4c4271fa34a2a67",
      "End": "7a1b6be410c44d8eaf54b79854d36951",
      "Id": "12eb6ab1c4c54239aa27bc20970c0fbf",
      "IsHidden": "False"
    },
    {
      "Start": "6c0735b3f24e4675a72f269a117e4335",
      "End": "17a32e1b33184322ad963f62899c85e5",
      "Id": "9d7a4e99d18347d78fdfd5c6f0488ae4",
      "IsHidden": "False"
    },
    {
      "Start": "6c0735b3f24e4675a72f269a117e4335",
      "End": "03c4cb9b09f741d58a15e3e0adcdcf1a",
      "Id": "0a50497c908f4c95991cf26fb2a16fb0",
      "IsHidden": "False"
    },
    {
      "Start": "21d3f03f77ff43eeb25798f00779b340",
      "End": "3424e67a1907425dae8004c675903cf4",
      "Id": "b1504a0a335b4ebfa2654c80935146a2",
      "IsHidden": "False"
    },
    {
      "Start": "6a0cc43957954721999fefc9137fc72e",
      "End": "3b546abf8385443292c184807f6a0114",
      "Id": "251b628c657a40c29f565f9275a7fc42",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "DynamoFormaBeta",
      "Version": "1.0.0.0",
      "ReferenceType": "Package",
      "Nodes": [
        "c99d2d85dfeb49d09f9dd5aa4246996a",
        "1ba78f3a5e3c497a99742adcef6b54f8",
        "d1bc51c8761c45e6a0c178aa62a4053b",
        "3514a8e8e4744b709488fe0d0bb595b1",
        "b02057058ec246b68f9161efd5b20fc3",
        "0045c4620a154be3b780a9497accf5ca",
        "c1a9526878704f6b87826e03109e9421",
        "7a0f3314c5b04275a93f3f6318acc84b",
        "4008d69ee8c444459821d3ff9c37d36a",
        "f8291f10c0a74e88a322aaa5864464d1",
        "74284be7cd904ebd9107f1eac033cfdd",
        "09a96de2f36b4a3285dea7c7d77d2bda"
      ]
    },
    {
      "Name": "MeshToolkit",
      "Version": "5.1.0",
      "ReferenceType": "Package",
      "Nodes": [
        "31d6e80e717d40838a18a759cea19b36",
        "e691d48f68e14d45b98eefe84d9cad0b",
        "191f9ee541fd4ecaa2be371a8f8891fb",
        "7e5857d93c064e0681d840e7b961226c",
        "d7a77a91cc0f453c88a07b332eec7ff8",
        "c5f14a92ea034c9e971745e4fc4f6add",
        "e5f89740bf534d0d89cd4432c4602763"
      ]
    },
    {
      "Name": "DynamoFormaBeta",
      "Version": "4.2.2.0",
      "ReferenceType": "Package",
      "Nodes": [
        "d68759d59832402f8aa9ba619b4b2e53",
        "dc8d6d57b3a54031824d0e11235a2ca5",
        "ca8ad82adad349dbb5a8db55f097985f"
      ]
    }
  ],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "3.1",
      "Data": {}
    }
  ],
  "Author": "The Dynamo Team",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.4.0.6892",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -103.28173828125,
      "EyeY": 88.47099304199219,
      "EyeZ": 272.099609375,
      "LookX": 49.76689910888672,
      "LookY": -63.32151794433594,
      "LookZ": -103.45687866210938,
      "UpX": 0.20936219394207,
      "UpY": 0.8756378293037415,
      "UpZ": -0.4352307915687561
    },
    "ConnectorPins": [
      {
        "Left": 6777.06624906147,
        "Top": 841.2163681034834,
        "IsHidden": false,
        "ConnectorGuid": "e2e61341-2eb6-42f7-9fc3-a915b0b05dbc"
      },
      {
        "Left": 6781.415487035997,
        "Top": 298.41542466371067,
        "IsHidden": false,
        "ConnectorGuid": "a3d8eeab-af20-4bba-92d8-a279e79c4810"
      },
      {
        "Left": 9086.95916630893,
        "Top": -1306.8423585676899,
        "IsHidden": false,
        "ConnectorGuid": "f362985c-ef65-4aa3-9cb8-bbb52e5e8b6b"
      },
      {
        "Left": 6777.97446856024,
        "Top": 1097.6292916185,
        "IsHidden": false,
        "ConnectorGuid": "627da606-2685-4627-9da9-4ca042602342"
      },
      {
        "Left": 6777.892620426504,
        "Top": 591.2576244038678,
        "IsHidden": false,
        "ConnectorGuid": "7c3305de-3cf9-4994-a43b-bbbaf7aa4ab6"
      }
    ],
    "NodeViews": [
      {
        "Id": "c99d2d85dfeb49d09f9dd5aa4246996a",
        "Name": "Element.Properties",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1526.73920917665,
        "Y": -550.2033814836789
      },
      {
        "Id": "5d84ddc2d1884f9dab760253d5afe808",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -820.7392091766501,
        "Y": -656.2033814836789
      },
      {
        "Id": "70f621a502534804803719f8fcf1c856",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -440.2392091766501,
        "Y": -690.030881483679
      },
      {
        "Id": "1ba78f3a5e3c497a99742adcef6b54f8",
        "Name": "Element.Children",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -105.73920917665009,
        "Y": -1008.9331263959804
      },
      {
        "Id": "d1bc51c8761c45e6a0c178aa62a4053b",
        "Name": "Element.Properties",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1648.8167533731894,
        "Y": -598.6528888278335
      },
      {
        "Id": "73f5b35922a74225b15eddae700c3aea",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2735.3167533731894,
        "Y": -738.4803888278335
      },
      {
        "Id": "3514a8e8e4744b709488fe0d0bb595b1",
        "Name": "Element.VolumeMesh",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7768.687662216058,
        "Y": -710.6897763635152
      },
      {
        "Id": "31d6e80e717d40838a18a759cea19b36",
        "Name": "Buildings On Site",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8103.687662216058,
        "Y": -711.6897763635152
      },
      {
        "Id": "b02057058ec246b68f9161efd5b20fc3",
        "Name": "Element.HasRepresentation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3435.099115606679,
        "Y": -701.0234819055954
      },
      {
        "Id": "5a770c0ebdba479cbf746b25a3345597",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3101.055421412877,
        "Y": -536.369986421555
      },
      {
        "Id": "0045c4620a154be3b780a9497accf5ca",
        "Name": "Element.GFAUnits",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5060.778282861695,
        "Y": -345.32247987506094
      },
      {
        "Id": "4c7d5f431c424f21b2f0e02d78ada885",
        "Name": "Function",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2453.0507997572176,
        "Y": 501.31244212672505
      },
      {
        "Id": "186764c8f7074e84861dd6ae1d8cd468",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5419.223195050086,
        "Y": 166.55950613668404
      },
      {
        "Id": "2ad4a84894bf4aeaac374dc2fbfe35b6",
        "Name": "Unit Type",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2453.0507997572176,
        "Y": 322.24545311824136
      },
      {
        "Id": "7df20720c3f34fac91da1fce72a0b014",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5419.223195050086,
        "Y": -11.440493863315965
      },
      {
        "Id": "f6edcfd2f1774c2296ebf0cd2b7d9f9e",
        "Name": "And",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5951.406821088778,
        "Y": 78.65855572120711
      },
      {
        "Id": "23d97db153d74941a707820b0339ea43",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6288.406821088778,
        "Y": -345.32247987506094
      },
      {
        "Id": "66f916b5eeeb42b781d4e872ce33fef8",
        "Name": "Included",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7649.0,
        "Y": 317.8656883339115
      },
      {
        "Id": "0030c2f8a42149e7b4a4be7e220a451b",
        "Name": "Excluded",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7649.0,
        "Y": 858.287986969448
      },
      {
        "Id": "deae016bc0504f4089afcd4079a467cb",
        "Name": "Building Included",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8715.562807057953,
        "Y": -929.1036595544016
      },
      {
        "Id": "1d1a41a4c8fc4a99acde366489f100e2",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4070.1865039942827,
        "Y": -886.3116818596377
      },
      {
        "Id": "c1a9526878704f6b87826e03109e9421",
        "Name": "Element.GetAllChildren",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4433.223195050086,
        "Y": -534.267993863316
      },
      {
        "Id": "7a0f3314c5b04275a93f3f6318acc84b",
        "Name": "Element.GetAllChildren",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "ShowGeometry": true,
        "X": 6782.461751997261,
        "Y": -1683.149005274276
      },
      {
        "Id": "4008d69ee8c444459821d3ff9c37d36a",
        "Name": "Element.GetAllChildren",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3101.055421412877,
        "Y": -701.0234819055954
      },
      {
        "Id": "81025afb58824aecb492c95a8388d785",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3101.055421412877,
        "Y": -886.3116818596377
      },
      {
        "Id": "f8291f10c0a74e88a322aaa5864464d1",
        "Name": "Element.VolumeMesh",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7138.782824519655,
        "Y": -1683.149005274276
      },
      {
        "Id": "e691d48f68e14d45b98eefe84d9cad0b",
        "Name": "Mesh.ByVerticesAndIndices",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7473.782824519655,
        "Y": -1683.149005274276
      },
      {
        "Id": "374063c0722e4af4af0b5fe7467ecb47",
        "Name": "Buildings Without GFAUnits (Excluded)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9696.782824519654,
        "Y": -1559.649005274276
      },
      {
        "Id": "0130f80b455d4e36a8e20a19767c26ba",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4752.333370673302,
        "Y": -345.32247987506094
      },
      {
        "Id": "95086b9b63f04ac48b5913c74f5e8bb4",
        "Name": "Curve.Patch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5951.406821088778,
        "Y": -345.32247987506094
      },
      {
        "Id": "680e4033455c4c21bbc26eb150d20c24",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7231.331109856329,
        "Y": 858.287986969448
      },
      {
        "Id": "afa759d11f3449979692f46a183c06cb",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7231.331109856329,
        "Y": 317.8656883339115
      },
      {
        "Id": "b64074fb633e4e2c8c80eced5c8feff7",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6778.531869079756,
        "Y": -104.49379808712789
      },
      {
        "Id": "74ea0b32a2e548bd95faa04c31807de9",
        "Name": "Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7092.531869079756,
        "Y": -104.49379808712789
      },
      {
        "Id": "74284be7cd904ebd9107f1eac033cfdd",
        "Name": "Element.HasRepresentation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7065.691673100418,
        "Y": -537.314411569515
      },
      {
        "Id": "e59ba4bc2b114db391a86a8bcf2341db",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6779.887177653358,
        "Y": -379.6911567729744
      },
      {
        "Id": "8647ae8ff5bf4f3494dfbf1a0f2402a1",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7433.687662216058,
        "Y": -710.6897763635152
      },
      {
        "Id": "191f9ee541fd4ecaa2be371a8f8891fb",
        "Name": "MeshDisplay.ByMeshColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8363.498321109524,
        "Y": -931.7300800812831
      },
      {
        "Id": "7e5857d93c064e0681d840e7b961226c",
        "Name": "MeshDisplay.ByMeshColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9313.782824519654,
        "Y": -1559.649005274276
      },
      {
        "Id": "811d0333950545959d882e3799f296b3",
        "Name": "Color Palette",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6782.461751997261,
        "Y": -1350.8433745497377
      },
      {
        "Id": "b7cc2e26c2aa412b89de8f450cfd1ef5",
        "Name": "Color Palette",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6782.461751997261,
        "Y": 496.2654334050186
      },
      {
        "Id": "a04c0ae22e6f4a8dba71083b38dc19e5",
        "Name": "Color Palette",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6782.461751997261,
        "Y": 1007.7449736015993
      },
      {
        "Id": "799a0edb759e4086a67c4c63ddc801f8",
        "Name": "Dictionary.ValueAtKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1526.73920917665,
        "Y": -728.2033814836789
      },
      {
        "Id": "0d0f867c47614afb962f8d95f5718e74",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1797.23920917665,
        "Y": -694.375881483679
      },
      {
        "Id": "718176714f1c4179a193252981f30f8c",
        "Name": "Function Apply",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1188.73920917665,
        "Y": -656.2033814836789
      },
      {
        "Id": "7d0ba19b099e4e91a1913b654d70716f",
        "Name": "List.AnyTrue",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3806.142809800481,
        "Y": -701.0234819055954
      },
      {
        "Id": "7b2fe1dd20e747f689e2ef09eced1935",
        "Name": "Dictionary.ValueAtKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1648.8167533731894,
        "Y": -776.6528888278335
      },
      {
        "Id": "a301f1f545054114a5e26d1e64692429",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1169.3167533731894,
        "Y": -779.8253888278335
      },
      {
        "Id": "9302774e23f14277a6a7c9792ef473e5",
        "Name": "Function Apply",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1986.8167533731894,
        "Y": -704.6528888278335
      },
      {
        "Id": "6060c504cdcb49fea321d2f70f23ba46",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2354.8167533731894,
        "Y": -704.6528888278335
      },
      {
        "Id": "d7a77a91cc0f453c88a07b332eec7ff8",
        "Name": "Mesh.Translate",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8915.782824519654,
        "Y": -1654.649005274276
      },
      {
        "Id": "bdf738bef1d34a50b86ea5f5bd24d477",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8524.782824519654,
        "Y": -1495.821505274276
      },
      {
        "Id": "cdec1ac725f64c4a96d0427999314144",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8229.782824519654,
        "Y": -1683.149005274276
      },
      {
        "Id": "c5f14a92ea034c9e971745e4fc4f6add",
        "Name": "Mesh.TriangleNormals",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 8524.782824519654,
        "Y": -1711.649005274276
      },
      {
        "Id": "e5f89740bf534d0d89cd4432c4602763",
        "Name": "Mesh.Explode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 7854.782824519655,
        "Y": -1683.149005274276
      },
      {
        "Id": "09a96de2f36b4a3285dea7c7d77d2bda",
        "Name": "[Get all Elements from Site]",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2310.800995305256,
        "Y": -939.2418416557164
      },
      {
        "Id": "aef4462bbf0446ebacbb5112d682a69c",
        "Name": "Math.Round",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7401.531869079756,
        "Y": -104.49379808712789
      },
      {
        "Id": "75bd93d9aebb4219bd3a66f61b5ccb64",
        "Name": "Calculated Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8771.531869079754,
        "Y": -104.49379808712789
      },
      {
        "Id": "aaa3177e87d0410aac0068e6f6ae9b2b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8414.531869079754,
        "Y": -104.49379808712789
      },
      {
        "Id": "12be3d5a1ddc467ea1614d5e03a1c7c6",
        "Name": "String.Split",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8033.531869079756,
        "Y": -104.49379808712789
      },
      {
        "Id": "904e2d4a830b4bdcb8f5b44393753ad5",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7722.531869079756,
        "Y": -104.49379808712789
      },
      {
        "Id": "54248ed2af3245a5939f35e55a5a6b3d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7722.531869079756,
        "Y": 43.3337019128721
      },
      {
        "Id": "026fcf47af6845cd910eca662591df5d",
        "Name": "Surface.PerimeterCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7229.777996820475,
        "Y": 495.8089274017427
      },
      {
        "Id": "46d2cb9f61054e62bf5ebd6716ddb6fa",
        "Name": "Surface.PerimeterCurves",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7232.386762498042,
        "Y": 1041.5762183458992
      },
      {
        "Id": "c5f613e2eb98474288e3ffa1f373c007",
        "Name": "Color Palette",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 6779.887177653358,
        "Y": -895.6022812771537
      },
      {
        "Id": "d68759d59832402f8aa9ba619b4b2e53",
        "Name": "Element.Children",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1195.0310196672126,
        "Y": -8.139740941290938
      },
      {
        "Id": "dc8d6d57b3a54031824d0e11235a2ca5",
        "Name": "Element.Properties",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -860.0310196672126,
        "Y": 24.774009058709225
      },
      {
        "Id": "83f8e70d93d448d19df6288b5ae5afdd",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 249.9689803327874,
        "Y": -115.05349094129087
      },
      {
        "Id": "a22a4bc2bcf64a2683c8d00dfe484968",
        "Name": "Function Apply",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -522.0310196672126,
        "Y": -81.22599094129089
      },
      {
        "Id": "b92aff8132b044a2ae63ef76c8a81892",
        "Name": "Dictionary.ValueAtKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -860.0310196672126,
        "Y": -153.2259909412909
      },
      {
        "Id": "b740723cbb4548a9bf67051ea095892d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -154.0310196672126,
        "Y": -81.22599094129089
      },
      {
        "Id": "58413ce9a14c428990dff823e2d8fb76",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1195.0310196672126,
        "Y": -156.3984909412909
      },
      {
        "Id": "ca8ad82adad349dbb5a8db55f097985f",
        "Name": "Element.GetAllChildren",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 614.2421952180812,
        "Y": -101.82095099227149
      },
      {
        "Id": "267c81028cd14fcab5b5f94afb6d4163",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 960.2421952180812,
        "Y": -101.82095099227149
      },
      {
        "Id": "a243404b45d84cc4b4802fda2ef80143",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1169.3167533731894,
        "Y": -631.7391388278335
      },
      {
        "Id": "ee018b393c5d49309888240dfcd111e3",
        "Name": "List.Join",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 815.5019557362505,
        "Y": -820.9053938303823
      },
      {
        "Id": "b56c772f8c624489a4aaa767ee30c91a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 328.6823504437432,
        "Y": -905.401222698566
      }
    ],
    "Annotations": [
      {
        "Id": "90f4e25b43ff4ff08785ec776d6e7877",
        "Title": "Get the Proposal",
        "DescriptionText": " We want all buildings under the proposal only in the Forma tree hierarky. We start by finding the Proposal and then get all direct children of this element. ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c99d2d85dfeb49d09f9dd5aa4246996a",
          "5d84ddc2d1884f9dab760253d5afe808",
          "70f621a502534804803719f8fcf1c856",
          "799a0edb759e4086a67c4c63ddc801f8",
          "718176714f1c4179a193252981f30f8c",
          "0d0f867c47614afb962f8d95f5718e74",
          "1ba78f3a5e3c497a99742adcef6b54f8",
          "16187d870ee44448874b6b74b58c4e5d"
        ],
        "HasNestedGroups": false,
        "Left": -1807.23920917665,
        "Top": -1081.9331263959803,
        "Width": 1946.5,
        "Height": 675.7297449123014,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -1008.9331263959804,
        "InitialHeight": 603.7297449123014,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "96859576697f4143972e3431c00994b1",
        "Title": "Get buildings in the Proposal and not in the Base",
        "DescriptionText": " Filter the elements to extract the buildings",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d1bc51c8761c45e6a0c178aa62a4053b",
          "73f5b35922a74225b15eddae700c3aea",
          "9302774e23f14277a6a7c9792ef473e5",
          "7b2fe1dd20e747f689e2ef09eced1935",
          "6060c504cdcb49fea321d2f70f23ba46",
          "a301f1f545054114a5e26d1e64692429",
          "a243404b45d84cc4b4802fda2ef80143",
          "333e199d47834435a440715c0be07044"
        ],
        "HasNestedGroups": false,
        "Left": 1159.3167533731894,
        "Top": -864.6528888278335,
        "Width": 1821.0,
        "Height": 410.0,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -791.6528888278335,
        "InitialHeight": 338.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8b593bddfdf44420898fdc01173fef6f",
        "Title": "Visualize Included Buildings",
        "DescriptionText": " Render the building volumes which are included in the calculation with a transparent blue color.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3514a8e8e4744b709488fe0d0bb595b1",
          "31d6e80e717d40838a18a759cea19b36",
          "deae016bc0504f4089afcd4079a467cb",
          "74284be7cd904ebd9107f1eac033cfdd",
          "8647ae8ff5bf4f3494dfbf1a0f2402a1",
          "e59ba4bc2b114db391a86a8bcf2341db",
          "191f9ee541fd4ecaa2be371a8f8891fb",
          "c5f613e2eb98474288e3ffa1f373c007"
        ],
        "HasNestedGroups": false,
        "Left": 6769.887177653358,
        "Top": -1004.7300800812831,
        "Width": 2232.6756294045954,
        "Height": 757.0389233083087,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -931.7300800812831,
        "InitialHeight": 697.0389233083087,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "d67c9c8d529142bb816e5db6319ae9de",
        "Title": "All Buildings Without GFAUnits",
        "DescriptionText": " Visualize any building element that does not have GFA Units representations. There are not included in the Area calculations. ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7a0f3314c5b04275a93f3f6318acc84b",
          "374063c0722e4af4af0b5fe7467ecb47",
          "e691d48f68e14d45b98eefe84d9cad0b",
          "f8291f10c0a74e88a322aaa5864464d1",
          "7e5857d93c064e0681d840e7b961226c",
          "811d0333950545959d882e3799f296b3",
          "e5f89740bf534d0d89cd4432c4602763",
          "cdec1ac725f64c4a96d0427999314144",
          "c5f14a92ea034c9e971745e4fc4f6add",
          "bdf738bef1d34a50b86ea5f5bd24d477",
          "d7a77a91cc0f453c88a07b332eec7ff8",
          "6a8d34f1bd7e4a5a927384c545f6d9c1",
          "0624da1711344401821d4dcd1d4bc3c8",
          "644617ae9af2425eaca93376778ea3b9",
          "6b12184ddb7b45039e1c46b1245ace1d"
        ],
        "HasNestedGroups": false,
        "Left": 6772.461751997261,
        "Top": -1877.149005274276,
        "Width": 3299.3210725223935,
        "Height": 658.3056307245383,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -1804.149005274276,
        "InitialHeight": 598.3056307245383,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "49c32bdd46c8478b93d7bbc63ca4ba1c",
        "Title": "Find Buildings with GFAUnits in the element hierarchy",
        "DescriptionText": "Find all building elements that contains a GFA Unit representation. These can eiher be directly on the building element, or at any of the children elements for \r\nthe building. In this first pass we use the HasRepresentation node to filter out these buildings. The ones who do not have the representation is\r\npassed on to visualize these in Red color. ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b02057058ec246b68f9161efd5b20fc3",
          "5a770c0ebdba479cbf746b25a3345597",
          "1d1a41a4c8fc4a99acde366489f100e2",
          "4008d69ee8c444459821d3ff9c37d36a",
          "81025afb58824aecb492c95a8388d785",
          "7d0ba19b099e4e91a1913b654d70716f"
        ],
        "HasNestedGroups": false,
        "Left": 3091.055421412877,
        "Top": -982.3116818596377,
        "Width": 1224.1310825814053,
        "Height": 577.9416954380827,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -886.3116818596377,
        "InitialHeight": 494.94169543808266,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "faf5ac88ba664f1a8110deec6a208880",
        "Title": "Filter For function and Unit Type",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c7d5f431c424f21b2f0e02d78ada885",
          "2ad4a84894bf4aeaac374dc2fbfe35b6"
        ],
        "HasNestedGroups": false,
        "Left": -2463.0507997572176,
        "Top": 206.24545311824136,
        "Width": 342.0,
        "Height": 427.0669890084837,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 322.24545311824136,
        "InitialHeight": 324.0669890084837,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "233f14f77be94a0cbca7ade4d45772fe",
        "Title": "Compute Area Sum",
        "DescriptionText": " Calculate the sum of the areas calculated",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b64074fb633e4e2c8c80eced5c8feff7",
          "74ea0b32a2e548bd95faa04c31807de9",
          "aef4462bbf0446ebacbb5112d682a69c",
          "75bd93d9aebb4219bd3a66f61b5ccb64",
          "aaa3177e87d0410aac0068e6f6ae9b2b",
          "12be3d5a1ddc467ea1614d5e03a1c7c6",
          "54248ed2af3245a5939f35e55a5a6b3d",
          "904e2d4a830b4bdcb8f5b44393753ad5"
        ],
        "HasNestedGroups": false,
        "Left": 6768.531869079756,
        "Top": -177.49379808712789,
        "Width": 2201.999999999998,
        "Height": 352.8275,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -104.49379808712789,
        "InitialHeight": 292.8275,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "5de2740ab5d24e75bc5bbc946b22c22f",
        "Title": "Calculate Inclusion of Area",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0045c4620a154be3b780a9497accf5ca",
          "186764c8f7074e84861dd6ae1d8cd468",
          "7df20720c3f34fac91da1fce72a0b014",
          "f6edcfd2f1774c2296ebf0cd2b7d9f9e",
          "23d97db153d74941a707820b0339ea43",
          "c1a9526878704f6b87826e03109e9421",
          "0130f80b455d4e36a8e20a19767c26ba",
          "95086b9b63f04ac48b5913c74f5e8bb4"
        ],
        "HasNestedGroups": false,
        "Left": 4423.223195050086,
        "Top": -607.267993863316,
        "Width": 2110.1836260386917,
        "Height": 935.8275,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -534.267993863316,
        "InitialHeight": 845.8275,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "ffac825437f94f678bbae2463e0a52f8",
        "Title": "Visualize Calculated Areas",
        "DescriptionText": " Visualize the calculated areas with a slightly transparent blue color.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "66f916b5eeeb42b781d4e872ce33fef8",
          "afa759d11f3449979692f46a183c06cb",
          "b7cc2e26c2aa412b89de8f450cfd1ef5",
          "026fcf47af6845cd910eca662591df5d"
        ],
        "HasNestedGroups": false,
        "Left": 6772.461751997261,
        "Top": 244.86568833391152,
        "Width": 1163.5382480027392,
        "Height": 405.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 317.8656883339115,
        "InitialHeight": 323.3997450711071,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "77fc69e3c4f3493b9dac5fbe19c4e240",
        "Title": "Visualize excluded Areas by function and Unit Filters",
        "DescriptionText": " Visualize the areas excluded by the function and unit type filters. ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0030c2f8a42149e7b4a4be7e220a451b",
          "680e4033455c4c21bbc26eb150d20c24",
          "a04c0ae22e6f4a8dba71083b38dc19e5",
          "46d2cb9f61054e62bf5ebd6716ddb6fa"
        ],
        "HasNestedGroups": false,
        "Left": 6772.461751997261,
        "Top": 785.287986969448,
        "Width": 1163.5382480027392,
        "Height": 405.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 858.287986969448,
        "InitialHeight": 328.2882313764512,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "840173a684244afd9b2f544c6c2c4d00",
        "Title": "Get all the elements from the Site",
        "DescriptionText": " ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "09a96de2f36b4a3285dea7c7d77d2bda"
        ],
        "HasNestedGroups": false,
        "Left": -2320.800995305256,
        "Top": -1099.2418416557164,
        "Width": 301.0,
        "Height": 304.0,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -939.2418416557164,
        "InitialHeight": 145.0,
        "TextblockHeight": 150.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "2d6a90558dff403596a61eabcb7eb91a",
        "Title": "Get children of compositions (Row Houses)",
        "DescriptionText": " Buildings in row houses is grouped under a comosition element.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d68759d59832402f8aa9ba619b4b2e53",
          "dc8d6d57b3a54031824d0e11235a2ca5",
          "83f8e70d93d448d19df6288b5ae5afdd",
          "a22a4bc2bcf64a2683c8d00dfe484968",
          "b92aff8132b044a2ae63ef76c8a81892",
          "b740723cbb4548a9bf67051ea095892d",
          "58413ce9a14c428990dff823e2d8fb76",
          "ca8ad82adad349dbb5a8db55f097985f",
          "267c81028cd14fcab5b5f94afb6d4163",
          "4c5d6426498e42829b9c5f601ee12b80",
          "9761cb798df34dd7909254776980cd94"
        ],
        "HasNestedGroups": false,
        "Left": -1205.0310196672126,
        "Top": -241.2259909412909,
        "Width": 2370.273214885294,
        "Height": 410.0000000000001,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -168.2259909412909,
        "InitialHeight": 338.0000000000001,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "16187d870ee44448874b6b74b58c4e5d",
        "Title": "Use function passing hack to ensrue we don't propagate warnings that are unavoidable with missing key-value pairs",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1220.23920917665,
        "Top": -735.2033814836789,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "718176714f1c4179a193252981f30f8c"
      },
      {
        "Id": "333e199d47834435a440715c0be07044",
        "Title": "Use function passing hack to ensrue we don't propagate warnings that are unavoidable with missing key-value pairs",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1955.3167533731894,
        "Top": -783.6528888278335,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "9302774e23f14277a6a7c9792ef473e5"
      },
      {
        "Id": "6a8d34f1bd7e4a5a927384c545f6d9c1",
        "Title": "Explode Meshes to translate away from existing Forma building and remove z-fighting issues",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 7819.282824519655,
        "Top": -1796.149005274276,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "e5f89740bf534d0d89cd4432c4602763"
      },
      {
        "Id": "f7502d314da34bcc8835f9eadc613aa7",
        "Title": "Get all Normals from all Mesh triangles as a Vector",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8499.282824519654,
        "Top": -1809.649005274276,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "c5f14a92ea034c9e971745e4fc4f6add"
      },
      {
        "Id": "644617ae9af2425eaca93376778ea3b9",
        "Title": "Translate our exploded Mesh out by a small factor to remove z-fighting issues",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8872.782824519654,
        "Top": -1767.649005274276,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d7a77a91cc0f453c88a07b332eec7ff8"
      },
      {
        "Id": "0624da1711344401821d4dcd1d4bc3c8",
        "Title": "Small scale factor for Mesh",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8518.782824519654,
        "Top": -1545.821505274276,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "bdf738bef1d34a50b86ea5f5bd24d477"
      },
      {
        "Id": "4c5d6426498e42829b9c5f601ee12b80",
        "Title": "Use function passing hack to ensrue we don't propagate warnings that are unavoidable with missing key-value pairs",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -553.5310196672126,
        "Top": -160.2259909412909,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "a22a4bc2bcf64a2683c8d00dfe484968"
      },
      {
        "Id": "9761cb798df34dd7909254776980cd94",
        "Title": "",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -148.47163428753947,
        "Top": -140.20342809112748,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -2048.47913099979,
    "Y": 805.6587339421777,
    "Zoom": 0.34779481453749916
  }
}